<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Azure.DigitalTwins.Parser</name>
    </assembly>
    <members>
        <member name="T:Azure.DigitalTwins.Parser.ContextV2">
            <summary>
            Collection of information from the DTDL v2 context.
            </summary>
            <summary>
            Collection of information from the DTDL v2 context.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ContextV2.TryCreateDtmi(System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.Dtmi@)">
            <summary>
            Create a <c>Dtmi</c> object given a string that is either a URI or a term defined in the context.
            </summary>
            <param name="uriOrTerm">A URI or a term defined in the context.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="dtmi">Out param to receive the constructed <c>Dtmi</c>.</param>
            <returns>True if a <c>Dtmi</c> was successfully created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ContextV2.GetTermOrUri(System.Uri)">
            <summary>
            Get a term from a URI if defined in the context. If not, return the URI as a string.
            </summary>
            <param name="uri">The URI for which to get the term.</param>
            <returns>The value of the term or the URI string.</returns>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DtmiResolver">
            <summary>
            The <c>DtmiResolver</c> property enables a client of the parser to set a callback that will be invoked when the parser encounters a context reference or a dependent reference to a DTMI for which it has no definition.
            The resolver accepts a collection of DTMIs as an argument, so a batch of identifiers can be resolved together; this reduces the count of network round trips when resolution requires remote retrieval.
            If the resolver is unable to obtain a definition for the DTMIs, it should return false.
            </summary>
            <param name="dtmis">A collection of DTMIs to resolve.</param>
            <returns>An enumeration of JSON strings that collectively include definitions for the DTMIs.  The order is not required to match the order of the DTMIs passed to the resolver.</returns>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTSupplementalPropertyInfo">
            <summary>
            Class <c>DTSupplementalPropertyInfo</c> provides information about a property that can be applied to a DTDL elemnt that has a supplemental type.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalPropertyInfo.#ctor(System.Uri,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTSupplementalPropertyInfo"/> class.
            </summary>
            <param name="type">URI that defines the type of the property.</param>
            <param name="maxCount">The maximum count of permitted values of the property.</param>
            <param name="minCount">The minimum count of permitted values of the property.</param>
            <param name="isPlural">True if the property is plural.</param>
            <param name="isOptional">True if the property is optional.</param>
            <param name="dictionaryKey">The name of the child property that acts as a dictionary key, or null if this property is not expressed as a dictionary.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSupplementalPropertyInfo.Type">
            <summary>
            Gets a <c>Uri</c> that indicates the type of the property.
            </summary>
            <remarks>
            The type of the <c>Type</c> property is a <c>Uri</c> instead of a <c>Dtmi</c> because when a property has a literal value in DTDL documents, its types is given by an XSD type.
            When the type of a property is a DTDL type, its Uri will be a Dtmi.
            </remarks>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSupplementalPropertyInfo.IsPlural">
            <summary>
            Gets a value indicating whether the property is a singular value or a collection of values.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSupplementalPropertyInfo.IsOptional">
            <summary>
            Gets a value indicating whether the property is optional or mandatory.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSupplementalPropertyInfo.DictionaryKey">
            <summary>
            Gets a value indicating the name of the nested property that determines the dictionary key.
            </summary>
            <remarks>
            This property has a non-null value only when a plural property is exposed as a <c>>Dictionary</c> instead of a <c>List</c>.
            If the property is singular or not a dictionary, the <c>DictionaryKey</c> property will be null.
            </remarks>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSupplementalPropertyInfo.ValueConstraint">
            <summary>
            Gets a <see cref="P:Azure.DigitalTwins.Parser.DTSupplementalPropertyInfo.ValueConstraint"/> that should be applied to the property.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSupplementalPropertyInfo.MaxCount">
            <summary>
            Gets a value indicating the maximum allowed count of values for this property.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSupplementalPropertyInfo.MinCount">
            <summary>
            Gets a value indicating the minimum required count of values for this property.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalPropertyInfo.Equals(Azure.DigitalTwins.Parser.DTSupplementalPropertyInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalPropertyInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalPropertyInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo">
            <summary>
            Class <c>DTSupplementalTypeInfo</c> provides information about a type that is not materialized as a C# class.
            </summary>
            <summary>
            Class <c>DTSupplementalTypeInfo</c> provides information about a type that is not materialized as a C# class.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.#ctor(Azure.DigitalTwins.Parser.DTExtensionKind,Azure.DigitalTwins.Parser.Dtmi,System.Boolean,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo"/> class.
            </summary>
            <param name="extensionKind">The kind of the extension that this supplemental type inherits from.</param>
            <param name="type">URI that represents the type.</param>
            <param name="isAbstract">True if the supplemental type is abstract.</param>
            <param name="parentType">URI that represents the immediate parent in the type hierarchy.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.IsAbstract">
            <summary>
            Gets a value indicating whether the supplemental type is abstract.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.ExtensionKind">
            <summary>
            Gets the kind of extension that this supplemental type represents.
            </summary>
            <remarks>
            If the supplemental type is intrinsic to the DTDL language instead of defined through an extension, the kind is <c>None</c>.
            </remarks>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.ContextId">
            <summary>
            Gets the Dtmi of the context for the language extension in which this type was defined.
            </summary>
            <remarks>
            If the supplemental type is intrinsic to the DTDL language instead of defined through an extension, the ID is the DTDL languge context.
            </remarks>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.Type">
            <summary>
            Gets the <c>Dtmi</c> that identifies the supplemental type.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.ParentType">
            <summary>
            Gets the <c>Dtmi</c> of the supplemental type that is the parent of this type.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.Properties">
            <summary>
            Gets a collection of <c>DTSupplementalPropertyInfo</c> objects, each of which provides information about a property that can be applied to a DTDL elemnt that has this supplemental type.
            </summary>
            <value>
            A dictionary that maps each string-valued property name to a <c>DTSupplementalPropertyInfo</c> object that describes the property with the given name.
            </value>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.SupplementalParentPropertySetter">
            <summary>
            Gets or sets an <c>IPropertySetter</c> that points to the parent of this supplemental type, if the parent is also supplemental.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.Equals(Azure.DigitalTwins.Parser.DTSupplementalTypeInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.Azure#DigitalTwins#Parser#IPropertySetter#AttachConstraints(Azure.DigitalTwins.Parser.IPropertyValueConstrainer)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.Azure#DigitalTwins#Parser#IPropertySetter#TryParsePropertyV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Azure.DigitalTwins.Parser.Dtmi,System.String,Newtonsoft.Json.Linq.JToken,System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.Azure#DigitalTwins#Parser#IPropertySetter#CheckForRequiredProperties(Azure.DigitalTwins.Parser.ParsingErrorCollection,Azure.DigitalTwins.Parser.Dtmi,System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.Azure#DigitalTwins#Parser#IPropertySetter#TrySetObjectProperty(System.String,System.Object,System.String,System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.Azure#DigitalTwins#Parser#IPropertySetter#TrySetLiteralProperty(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.Azure#DigitalTwins#Parser#IPropertySetter#TryAddObjectPropertyToJArray(System.String,System.Object,Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.Azure#DigitalTwins#Parser#IPropertySetter#TryAddLiteralPropertyToJArray(System.String,System.Object,Newtonsoft.Json.Linq.JArray@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.TryGetAsJObject(Newtonsoft.Json.Linq.JObject@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class, if the instance represents a non-built-in supplemental type.
            </summary>
            <param name="extensionTypeObject">The JObject that receives the seriazized instance.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>True if the instance represents a non-built-in supplemental type.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.AddProperty(System.String,System.Uri,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Boolean,System.String)">
            <summary>
            Adds a property to this supplemental type.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyTypeUri">URI that defines the type of the property.</param>
            <param name="maxCount">The maximum count of permitted values of the property.</param>
            <param name="minCount">The minimum count of permitted values of the property.</param>
            <param name="isPlural">True if the property is plural.</param>
            <param name="isOptional">True if the property is optional.</param>
            <param name="dictionaryKey">The name of the child property that acts as a dictionary key, or null if this property is not expressed as a dictionary.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.AddConstraint(System.String,Azure.DigitalTwins.Parser.ValueConstraint)">
            <summary>
            Adds a type constraint to this supplemantal type.
            </summary>
            <param name="propertyName">Name of the property whose type to constrain.</param>
            <param name="valueConstraint">A <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> for values of this property.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.AllowedCotypeKinds">
            <summary>
            Gets a collection of kinds of allowed cotypes for this supplemental type.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSupplementalTypeInfo.AddCotype(Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Adds a cotype to this supplemental type.
            </summary>
            <param name="cotypeKind">The kind of the cotype.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.ElementPropertyConstraint">
            <summary>
            Class describing a constraint on a property of an element.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ElementPropertyConstraint.ParentId">
            <summary>
            Gets or sets the ID of the element that has a property whose value is constrained.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ElementPropertyConstraint.PropertyName">
            <summary>
            Gets or sets the property name.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ElementPropertyConstraint.ElementId">
            <summary>
            Gets or sets the ID of the element that has the constraint.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ElementPropertyConstraint.ValueConstraint">
            <summary>
            Gets or sets a <see cref="P:Azure.DigitalTwins.Parser.ElementPropertyConstraint.ValueConstraint"/> on the value of an element's property.
            </summary>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.Helpers">
            <summary>
            A static class that holds various helper functions.
            </summary>
            <summary>
            A static class that holds various helper functions.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.Helpers.AreDictionariesLiteralEqual``1(System.Collections.Generic.IDictionary{System.String,``0},System.Collections.Generic.IDictionary{System.String,``0})">
            <summary>
            Checks the equality of two dictionaries whose values are literal types.
            </summary>
            <typeparam name="T">The literal type of the dictionary values.</typeparam>
            <param name="dict1">One of the dictionaries to compare for equality.</param>
            <param name="dict2">The dictionary to compare against.</param>
            <returns>True if the dictionaries are equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.Helpers.GetObjectId(System.Object)">
            <summary>
            Gets the identifier of an object assumed to be a DTEntityInfo.
            </summary>
            <param name="obj">The object.</param>
            <returns>The identifier of the object.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.Helpers.AreListsIdEqual``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})">
            <summary>
            Checks the equality of two lists by comparing their identifier values.
            </summary>
            <typeparam name="T">The object type of the list values.</typeparam>
            <param name="list1">One of the lists to compare for equality.</param>
            <param name="list2">The list to compare against.</param>
            <returns>True if the lists are equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.Helpers.AreListsIdOrLiteralEqual(System.Collections.Generic.IList{System.Object},System.Collections.Generic.IList{System.Object})">
            <summary>
            Checks the equality of two lists by comparing their identifier values or literal values.
            </summary>
            <param name="list1">One of the lists to compare for equality.</param>
            <param name="list2">The list to compare against.</param>
            <returns>True if the lists are equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.Helpers.AreDictionariesIdEqual``1(System.Collections.Generic.IDictionary{System.String,``0},System.Collections.Generic.IDictionary{System.String,``0})">
            <summary>
            Checks the equality of two dictionaries by comparing their identifier values.
            </summary>
            <typeparam name="T">The object type of the dictionary values.</typeparam>
            <param name="dict1">One of the dictionaries to compare for equality.</param>
            <param name="dict2">The dictionary to compare against.</param>
            <returns>True if the dictionaries are equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.Helpers.AreDictionariesIdOrLiteralEqual(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Checks the equality of two dictionaries by comparing their identifier values or literal values.
            </summary>
            <param name="dict1">One of the dictionaries to compare for equality.</param>
            <param name="dict2">The dictionary to compare against.</param>
            <returns>True if the dictionaries are equal.</returns>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.IPropertySetter">
            <summary>
            Interface for setting properties of supplemental types.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.IPropertySetter.AttachConstraints(Azure.DigitalTwins.Parser.IPropertyValueConstrainer)">
            <summary>
            Attach any constraints to properties that are not properties of this <see cref="T:Azure.DigitalTwins.Parser.IPropertySetter"/>.
            </summary>
            <param name="propertyValueConstrainer">A <see cref="T:Azure.DigitalTwins.Parser.IPropertyValueConstrainer"/> to call back to add each constraint.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.IPropertySetter.TryParsePropertyV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Azure.DigitalTwins.Parser.Dtmi,System.String,Newtonsoft.Json.Linq.JToken,System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <summary>
            Parse a property in a JSON token.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="propToken">The property token to parse.</param>
            <param name="properties">A collection of properties to update with the property information.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.IPropertySetter.CheckForRequiredProperties(Azure.DigitalTwins.Parser.ParsingErrorCollection,Azure.DigitalTwins.Parser.Dtmi,System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <summary>
            Check that all non-optional properties have been set.
            </summary>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which missing-required-property parsing errors are added as appropriate.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="properties">A collection of properties to update with the property information.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.IPropertySetter.TrySetObjectProperty(System.String,System.Object,System.String,System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <param name="properties">A collection of properties to update with the property information.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.IPropertySetter.TrySetLiteralProperty(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object}@)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="properties">A collection of properties to update with the property information.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.IPropertySetter.TryAddObjectPropertyToJArray(System.String,System.Object,Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Try to add an object property with a given <paramref name="propertyName"/> to a <c>JArray</c>.
            </summary>
            <param name="propertyName">The name of the property to add if the property is recognized.</param>
            <param name="value">The value for the property.</param>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the property to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers that is added to if the property is recognized.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.IPropertySetter.TryAddLiteralPropertyToJArray(System.String,System.Object,Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Try to add a literal property with a given <paramref name="propertyName"/> to a <c>JArray</c>.
            </summary>
            <param name="propertyName">The name of the property to add if the property is recognized.</param>
            <param name="value">The value for the property.</param>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the property to.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.IPropertyValueConstrainer">
            <summary>
            Interface for establishing a type constraint on a property.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.IPropertyValueConstrainer.AddConstraint(System.String,Azure.DigitalTwins.Parser.ValueConstraint)">
            <summary>
            Add a constraint on the value of the indicated property.
            </summary>
            <param name="propertyName">Property whose value is to be constrained.</param>
            <param name="valueConstraint">A <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to apply to the property named by <paramref name="propertyName"/>.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.ITypeChecker">
            <summary>
            Interface for checking whether an obverse object has a given type.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ITypeChecker.DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Determine whether the object has the indicated type.
            </summary>
            <param name="typeId">The DTMI of the type to check for.</param>
            <returns>True if the object has the type.</returns>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.LiteralProcessor">
            <summary>
            A class for proccesing literal values in the parser.
            </summary>
            <summary>
            A class for proccesing literal values in the parser.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.LiteralProcessor.ParseLiteralValue(System.String,System.String)">
            <summary>
            Parse the given <paramref name="literalString"/> according to the XSD type given by <paramref name="typeFragment"/>.
            </summary>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <param name="literalString">A string representation of the literal to parse.</param>
            <returns>An <c>object</c> containing the parsed value.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.LiteralProcessor.TryParseLiteralValue(System.String,System.String,System.Object@)">
            <summary>
            Try to parse a string as a literal value with a type given by an XSD URI fragment.
            </summary>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <param name="literalString">The string to parse as a literal.</param>
            <param name="literalValue">An object to contain the parsed value.</param>
            <returns>True if the value can be parsed.</returns>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.ModelHydrator">
            <summary>
            Class for rehydrating a packaged object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelHydrator.Hydrate(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Hydrate a packaged object model.
            </summary>
            <param name="jsonTexts">An enumeration of JSON texts that contain the packaged object model.</param>
            <returns>A <c>Model</c>.</returns>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.ModelPackager">
            <summary>
            Class for packaging an object model into a JSON string.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelPackager.#ctor(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.SupplementalTypeCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.ModelPackager"/> class.
            </summary>
            <param name="model">The <c>Model</c> that is to be packaged.</param>
            <param name="supplementalTypeCollection">The <c>SupplementalTypeCollection</c> of the model that is to be packaged.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelPackager.GetPackagedObjectModel(Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Gets a packaged object model starting at the <paramref name="rootId"/>.
            </summary>
            <param name="rootId">The DTMI of the root object to package.</param>
            <returns>A JSON string representing the object model.</returns>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.ModelParser">
            <summary>
            Class <c>ModelParser</c> parses the DTDL language.
            </summary>
            <summary>
            Class <c>ModelParser</c> parses the DTDL language.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelParser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.ModelParser"/> class.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ModelParser.DtmiResolver">
            <summary>
            Gets or sets the <c>DtmiResolver</c> callback that will be called to resolve <c>@context</c> references or undefined identifiers.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ModelParser.Options">
            <summary>
            Gets or sets a set of <c>ModelParsingOption</c> values that control parsing of DTDL models.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ModelParser.SupplementalTypeCollection">
            <summary>
            Gets a <c>SupplementalTypeCollection</c>.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelParser.GetSupplementalTypes">
            <summary>
            Returns a collection of <c>DTSupplementalTypeInfo</c> objects, each of which provides information about a type known to the parser that is not materialized as a C# class.
            </summary>
            <returns>
            A dictionary that maps each <c>Dtmi</c> to a <c>DTSupplementalTypeInfo</c> object that describes the type with the given identifier.
            </returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelParser.ParseIdPropertyV2(Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.Boolean,Azure.DigitalTwins.Parser.ParsingErrorCollection,System.Boolean@)">
            <summary>
            Parse the @id value from a JObject into a Dtmi, or auto-generate an identifier if none present.
            </summary>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of this object, used for auto ID generation.</param>
            <param name="propName">The name of the property by which the parent refers to this object, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="idRequired">A boolean value indicating whether the @id must be present in the object.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing error is added.</param>
            <param name="autogenned">Out param indicating whether the DTMI was auto-generated.</param>
            <returns>The DTMI extracted from the object or auto-generated.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelParser.ParseSingularStringToken(Azure.DigitalTwins.Parser.Dtmi,System.String,Newtonsoft.Json.Linq.JToken,System.Nullable{System.Int32},System.Text.RegularExpressions.Regex,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a singular string value from a JToken.
            </summary>
            <param name="elementId">The DTMI of the element that holds the string property to parse.</param>
            <param name="propertyName">The name of the string property to parse.</param>
            <param name="token">The JToken to parse.</param>
            <param name="maxLength">The maximum permissible length of a string, or null if no maximum.</param>
            <param name="pattern">A regex that constrains the permissible values, or null of no pattern constraint.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing error is added.</param>
            <returns>The string value extracted.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelParser.ParseLangStringToken(Azure.DigitalTwins.Parser.Dtmi,System.String,Newtonsoft.Json.Linq.JToken,System.String,System.Nullable{System.Int32},System.Text.RegularExpressions.Regex,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse language string values from a JToken.
            </summary>
            <param name="elementId">The DTMI of the element that holds the string property to parse.</param>
            <param name="propertyName">The name of the string property to parse.</param>
            <param name="token">The JToken to parse.</param>
            <param name="defaultLang">The default language.</param>
            <param name="maxLength">The maximum permissible length of a string, or null if no maximum.</param>
            <param name="pattern">A regex that constrains the permissible values, or null of no pattern constraint.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing error is added.</param>
            <returns>A dictionary that maps language codes to strings.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelParser.ParseSingularIntegerToken(Azure.DigitalTwins.Parser.Dtmi,System.String,Newtonsoft.Json.Linq.JToken,System.Nullable{System.Int32},System.Nullable{System.Int32},Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a singular integer value from a JToken.
            </summary>
            <param name="elementId">The DTMI of the element that holds the string property to parse.</param>
            <param name="propertyName">The name of the string property to parse.</param>
            <param name="token">The JToken to parse.</param>
            <param name="minInclusive">The minimum permissible value, or null if no minimim.</param>
            <param name="maxInclusive">The maximum permissible value, or null if no maximum.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing error is added.</param>
            <returns>The integer value extracted.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelParser.ParseSingularBooleanToken(Azure.DigitalTwins.Parser.Dtmi,System.String,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a singular boolean value from a JToken.
            </summary>
            <param name="elementId">The DTMI of the element that holds the string property to parse.</param>
            <param name="propertyName">The name of the string property to parse.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing error is added.</param>
            <returns>The boolean value extracted.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelParser.ParseSingularLiteralToken(Azure.DigitalTwins.Parser.Dtmi,System.String,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.ParsingErrorCollection,System.String@)">
            <summary>
            Parse a singular string, integer, or boolean value from a JToken.
            </summary>
            <param name="elementId">The DTMI of the element that holds the string property to parse.</param>
            <param name="propertyName">The name of the string property to parse.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing error is added.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>The literal value extracted.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelParser.GetDatytypeString(System.Type)">
            <summary>
            Get a string representation of basic datatypes integer, string, and boolean.
            </summary>
            <param name="datatype">The <c>Type</c> value to represent.</param>
            <returns>The string representation.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelParser.ParseSingularIdentifierToken(Azure.DigitalTwins.Parser.Dtmi,System.String,Newtonsoft.Json.Linq.JToken,System.Nullable{System.Int32},System.Text.RegularExpressions.Regex,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a singular identifier value from a JToken.
            </summary>
            <param name="elementId">The DTMI of the element that holds the string property to parse.</param>
            <param name="propertyName">The name of the string property to parse.</param>
            <param name="token">The JToken to parse.</param>
            <param name="maxLength">The maximum permissible length of a string, or null if no maximum.</param>
            <param name="pattern">A regex that constrains the permissible values, or null of no pattern constraint.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing error is added.</param>
            <returns>The identifier value extracted.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelParser.TryUpdateActiveContextsFromObject(Newtonsoft.Json.Linq.JObject,System.Int32@,Azure.DigitalTwins.Parser.PartnerContextFlags@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Check the <c>JObject</c> for a DTDL context specifier, and update the referenced <paramref name="dtdlVersion"/> and/or <paramref name="partnerContextFlags"/> if present.
            </summary>
            <param name="obj">The <c>JObject</c> to check.</param>
            <param name="dtdlVersion">Reference param to update with the DTDL version.</param>
            <param name="partnerContextFlags">Reference param to update with set of active partner contexts.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing error is added.</param>
            <returns>True if context specifier present.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelParser.SetObjectProperties(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},Azure.DigitalTwins.Parser.ParsingErrorCollection,System.Boolean)">
            <summary>
            Set the object properties from <paramref name="objectPropertyInfoList"/> on elements in the given <paramref name="model"/>.
            </summary>
            <param name="model">The model whose properties to set.</param>
            <param name="objectPropertyInfoList">Object property information for the model.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing error is added.</param>
            <param name="strictPartitionEnforcement">Check that the object of any reference is either (a) a partition, (b) defined outside of any partition, or (c) defined in the same partition as the referring object.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelParser.HydrateObjectModel(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Hydrate a collection of packaged object models that were returned by <c>GetPackagedObjectModel()</c>.
            </summary>
            <param name="jsonTexts">The JSON text strings that represent packaged object models.</param>
            <returns>
            A dictionary that maps each <c>Dtmi</c> to a subclass of <c>DTEntityInfo</c>.
            </returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelParser.ParseAsync(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Asynchronously parse a collection of JSON text strings as DTDL models.
            </summary>
            <param name="jsonTexts">The JSON text strings to parse as DTDL models.</param>
            <returns>
            A <c>Task</c> object whose <c>Result</c> property is a dictionary that maps each <c>Dtmi</c> to a subclass of <c>DTEntityInfo</c>.
            </returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelParser.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Parse an element encoded in a JObject.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.ModelParsingOption">
            <summary>
            Enum <c>ModelParsingOption</c> defines options that may change the parser’s behavior.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ModelParsingOption.AllowUndefinedExtensions">
            <summary>
            The <c>AllowUndefinedExtensions</c> option tells the parser not to abort parsing if it encounters a reference to an extension that cannot be resolved.
            Specifically, if no <c>DtmiResolver</c> is specified, the parser will not throw an exception on encountering an extension reference, and if a DtmiResolver is specified but returns null when called, the parser will not throw an exception if it had called the resolver to resolve an extension reference.
            Furthermore, the parser will not ensure that every property in an element is relevant to one of the types declared on the element, since the meaning of the types may not be known.
            <br />
            This option has no effect on references to external definitions that are not extensions, such as references via "contents" or "extends" properties; these definitions are always required.
            <br />
            This option also has no effect on the use of undefined types; these are always permitted.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ModelParsingOption.MandateTopLevelPartition">
            <summary>
            The <c>MandateTopLevelPartition</c> option tells the parser to check that the top-level object in each JSON text submitted to ParseAsync() has an @type that is a partition type.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ModelParsingOption.StrictPartitionEnforcement">
            <summary>
            The <c>StrictPartitionEnforcement</c> option tells the parser to check that the object of any reference is either (a) a partition, (b) defined outside of any partition, or (c) defined in the same partition as the referring object.
            </summary>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.ModelPartitionCollection">
            <summary>
            A collection of JSON partitions of a DTDL model.
            </summary>
            <summary>
            A collection of JSON partitions of a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelPartitionCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.ModelPartitionCollection"/> class.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ModelPartitionCollection.PartitionTypeDescription">
            <summary>
            Gets a textual description of the types that are partition types.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ModelPartitionCollection.ModelPartitions">
            <summary>
            Gets a dictionary that maps from a DTMI to a JSON document containing the partition of the model rooted at this DTMI.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelPartitionCollection.HasPartitionType(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Determines whether a <c>JObject</c> has a partition type.
            </summary>
            <param name="obj">The <c>JObject</c>.</param>
            <returns>True if partition type.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ModelPartitionCollection.AddModelJson(Newtonsoft.Json.Linq.JContainer)">
            <summary>
            Add information from a JSON model to the collection.
            </summary>
            <param name="model">A <c>JContaioner</c> from which to extract information for the collection.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.PackagedObjectPropertyInfo">
            <summary>
            Struct containing information about an object property in a packaged object model.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.PackagedObjectPropertyInfo.ElementId">
            <summary>
            Gets or sets the ID of the element that has the property.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.PackagedObjectPropertyInfo.PropertyName">
            <summary>
            Gets or sets the property name.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.PackagedObjectPropertyInfo.ReferencedElementId">
            <summary>
            Gets or sets the <c>DTMI</c> of the object referenced by this property.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.PackagedObjectPropertyInfo.Key">
            <summary>
            Gets or sets the string value of the dictionary key.
            </summary>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo">
            <summary>
            Class containing information about an object property being parsed.
            </summary>
            <summary>
            Class containing information about an object property being parsed.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo.ElementId">
            <summary>
            Gets or sets the ID of the element that has the property.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo.PropertyName">
            <summary>
            Gets or sets the property name.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo.ReferencedElementId">
            <summary>
            Gets or sets the <c>DTMI</c> of the object referenced by this property.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo.KeyProperty">
            <summary>
            Gets or sets the string value of the property that holds the dictionary key.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo.SupplementalType">
            <summary>
            Gets or sets the identifier of a supplemental type, if required.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo.BadTypeCauseFormat">
            <summary>
            Gets or sets a format string for the error cause when a bad type is given in a model.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo.BadTypeActionFormat">
            <summary>
            Gets or sets a format string for the error resolution action when a bad type is given in a model.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo.ExpectedKinds">
            <summary>
            Gets or sets a collection of <c>DTEntityKind</c> indicating the expected kinds for this property.
            </summary>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.ParserValues">
            <summary>
            Static class that holds values used by the Parser.
            </summary>
            <summary>
            Static class that holds values used by the Parser.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ParserValues.CurrentPackageFormatVersion">
            <summary>
            The current package format version.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ParserValues.DtdlContextResourceName">
            <summary>
            Template for resource name of DTDL context.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ParserValues.DtdlModelRdfShaclResourceName">
            <summary>
            Template for resource name of DTDL RDF-SHACL definitions.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ParserValues.DtdlModelElementsResourceName">
            <summary>
            Template for resource name of DTDL model elements.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ParserValues.StandardExtensionRdfShaclResourceName">
            <summary>
            Template for resource name of standard extension RDF-SHACL definitions.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ParserValues.StandardExtensionElementsResourceName">
            <summary>
            Template for resource name of standard extension model elements.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ParserValues.PartnerContextResourceName">
            <summary>
            Template for resource name of partner extension context.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ParserValues.PartnerExtensionRdfShaclResourceName">
            <summary>
            Template for resource name of partner extension RDF-SHACL definitions.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ParserValues.PartnerExtensionElementsResourceName">
            <summary>
            Template for resource name of partner extension model elements.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ParserValues.AllowUndefinedExtensionsSkipTerm">
            <summary>
            Skip term for allowing undefined extensions.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ParserValues.PartnerMinVersion">
            <summary>
            Gets a dictinoary that maps from partner name to minimum language version for the partner's extension.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ParserValues.MinimumDtdlVersion">
            <summary>
            The minimum DTDL version supported.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ParserValues.CurrentDtdlVersion">
            <summary>
            The current DTDL version.
            </summary>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.ParsingErrorCollection">
            <summary>
            A collection of <c>ParsingError</c>.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ParsingErrorCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.ParsingErrorCollection"/> class.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ParsingErrorCollection.ThrowIfAny">
            <summary>
            Throw a <c>ParsingException</c> if any errors are in the collection.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ParsingErrorCollection.Add(System.Uri,System.String,System.String,System.Uri,System.Uri,System.String,System.String)">
            <summary>
            Add a new parsing error to the collection.
            </summary>
            <param name="validationId">A URI representing the validation condition that identifies the error.</param>
            <param name="causeFormat">A format string for a message that describes the cause of the error.</param>
            <param name="actionFormat">A format string for a message that describes an action to address the error.</param>
            <param name="primaryId">An optional URI that indicates the primary element related to the error.</param>
            <param name="secondaryId">An optional URI that indicates a secondary element related to the error.</param>
            <param name="property">An optional string indicating a property name that helps to pinpoint the error.</param>
            <param name="value">An optional string indicating a property value that helps to pinpoint the error.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.PartnerContextFlags">
            <summary>
            Flags for identifying sets of partner context specifiers in a DTDL document.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.PartnerContextFlags.None">
            <summary>No context specified.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.PartnerContextFlags.Iotcentral">
            <summary>IoT Central extension context.</summary>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.ExpansionType">
            <summary>
            The type of phrase to generate when expanding an auto-generated DTMI.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ExpansionType.Nominative">
            <summary>A nominative phrase</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ExpansionType.Possessive">
            <summary>A possessive phrase</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ExpansionType.Relative">
            <summary>A relative phrase</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.ExpansionType.Elective">
            <summary>An elective phrase</summary>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.ResultFormatter">
            <summary>
            Class for formatting results returned from formatted select queries.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ResultFormatter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.ResultFormatter"/> class.
            </summary>
            <param name="formatString">The format string for the message.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ResultFormatter.Install(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ResultFormatter.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.ResultFormatterFactory">
            <summary>
            Class for a factory that creates <c>ResultFormatter</c>.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ResultFormatterFactory.Create(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.StandardElementsV2">
            <summary>
            A collection of values of standard elements from the DTDL metamodel.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.StandardElementsV2.TryAddElementToModel(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Add an element from the collection to the model; also add any transitively referenced elements in the collection.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="elementId">The identifier of the element to add.</param>
            <returns>True if the element is present in the collection.</returns>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.SupplementalTypeCollection">
            <summary>
            A collection of DTDL types that are not materialized as C# classes.
            </summary>
            <summary>
            A collection of DTDL types that are not materialized as C# classes.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.SupplementalTypeCollection.SupplementalTypes">
            <summary>
            Gets or sets a dictionary that maps from the DTMI of a type to a <c>DTSupplementalTypeInfo</c> object.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.SupplementalTypeCollection.AddExtension(Newtonsoft.Json.Linq.JArray,System.Int32)">
            <summary>
            Add supplemental type information from a <c>JArray</c> containing extension types from a packaged object model.
            </summary>
            <param name="extensionTypesArray">The packaged extension types.</param>
            <param name="packageFormatVersion">The format version of the packaged object containin the extension types.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.SupplementalTypeCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.SupplementalTypeCollection"/> class.
            </summary>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.ValueConstraint">
            <summary>
            Class describing a constraint on a value.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ValueConstraint.RequiredTypes">
            <summary>
            Gets or sets a list of type identifiers, one of which is required for the element.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ValueConstraint.RequiredTypesString">
            <summary>
            Gets or sets a string describing the required types.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ValueConstraint.RequiredValues">
            <summary>
            Gets or sets a list of value identifiers, one of which is required for the element.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.ValueConstraint.RequiredValuesString">
            <summary>
            Gets or sets a string describing the required values.
            </summary>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.Model">
            <summary>
            A DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.Model.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.Model"/> class.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.Model.Dict">
            <summary>
            Gets a dictionary that maps DTMIs to their obverse objects.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.Model.TryCreateObverseObject(Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Create an obverse object and add it to the dictionary.
            </summary>
            <param name="elementId">The ID of the element to create an object for.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="obverseName">The name of the obverse class to instantiate.</param>
            <returns>True if the element ID is not already in the dictionary.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.Model.IsPartition(Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Is the element in the dictionary a partition.
            </summary>
            <param name="elementId">The ID of the element.</param>
            <returns>True if the element is a partition.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.Model.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="elementId">Identifier of the element.</param>
            <param name="supplementalTypeId">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.Model.SetPartitionInfo(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="elementId">Identifier of the element.</param>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.Model.GetAsJObject(Azure.DigitalTwins.Parser.Dtmi,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the element.
            </summary>
            <param name="elementId">Identifier of the element.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.Model.DoesPropertyDictContainKey(Azure.DigitalTwins.Parser.Dtmi,System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="elementId">Identifier of the element.</param>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.Model.TrySetObjectProperty(Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.Dtmi,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="elementId">Identifier of the element.</param>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="referencedElementId">The element ID of the object to set as the value.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.Model.TrySetLiteralProperty(Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="elementId">Identifier of the element.</param>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.Model.IsKindInSet(Azure.DigitalTwins.Parser.Dtmi,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.DTEntityKind})">
            <summary>
            Determines whether the <c>EntityKind</c> of the element is in the given <paramref name="kindSet"/>.
            </summary>
            <param name="elementId">Identifier of the element.</param>
            <param name="kindSet">Set of <c>DTEntityKind</c>.</param>
            <returns>True if the element's kind is in the set.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.Model.GetKindString(Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Gets a string representing the <c>EntityKind</c> of an element/>.
            </summary>
            <param name="elementId">Identifier of the element.</param>
            <returns>String representation of the element's <c>EntityKind</c>.</returns>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.IdentifierRestrictions">
            <summary>
            A static class for determining whether a string is a valid identifier.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.IdentifierRestrictions.CheckIdValidity(System.String,Azure.DigitalTwins.Parser.ParsingErrorCollection,System.Boolean)">
            <summary>
            Determines whether a string is a valid identifier.
            </summary>
            <param name="idString">The string to check.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing error is added.</param>
            <param name="throwIfInvalid">If true, throw a <c>ParsingException</c> if the identifier is invalid.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTReferenceInfo">
            <summary>
            Class <c>DTReferenceInfo</c> corresponds to an element of type Reference in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTReferenceInfo"/> class.
            </summary>
            <param name="id">Identifier for the Reference.</param>
            <param name="definedIn">Identifier of the partition in which this Reference is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTReferenceInfo"/> class.
            </summary>
            <param name="id">Identifier for the Reference.</param>
            <param name="definedIn">Identifier of the partition in which this Reference is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Reference if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTReferenceInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.op_Equality(Azure.DigitalTwins.Parser.DTReferenceInfo,Azure.DigitalTwins.Parser.DTReferenceInfo)">
            <summary>
            Determines whether two <c>DTReferenceInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTReferenceInfo</c> object to compare.</param>
            <param name="y">Another <c>DTReferenceInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.op_Inequality(Azure.DigitalTwins.Parser.DTReferenceInfo,Azure.DigitalTwins.Parser.DTReferenceInfo)">
            <summary>
            Determines whether two <c>DTReferenceInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTReferenceInfo</c> object to compare.</param>
            <param name="y">Another <c>DTReferenceInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.Equals(Azure.DigitalTwins.Parser.DTReferenceInfo)">
            <summary>
            Compares to another <c>DTReferenceInfo</c> object.
            </summary>
            <param name="other">The other <c>DTReferenceInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTReferenceInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTReferenceInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTReferenceInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTReferenceInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Reference object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTReferenceInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTFloatInfo">
            <summary>
            Class <c>DTFloatInfo</c> corresponds to an element of type Float in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTFloatInfo"/> class.
            </summary>
            <param name="id">Identifier for the Float.</param>
            <param name="definedIn">Identifier of the partition in which this Float is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTFloatInfo"/> class.
            </summary>
            <param name="id">Identifier for the Float.</param>
            <param name="definedIn">Identifier of the partition in which this Float is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Float if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTFloatInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.op_Equality(Azure.DigitalTwins.Parser.DTFloatInfo,Azure.DigitalTwins.Parser.DTFloatInfo)">
            <summary>
            Determines whether two <c>DTFloatInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTFloatInfo</c> object to compare.</param>
            <param name="y">Another <c>DTFloatInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.op_Inequality(Azure.DigitalTwins.Parser.DTFloatInfo,Azure.DigitalTwins.Parser.DTFloatInfo)">
            <summary>
            Determines whether two <c>DTFloatInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTFloatInfo</c> object to compare.</param>
            <param name="y">Another <c>DTFloatInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.Equals(Azure.DigitalTwins.Parser.DTFloatInfo)">
            <summary>
            Compares to another <c>DTFloatInfo</c> object.
            </summary>
            <param name="other">The other <c>DTFloatInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTFloatInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTFloatInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTFloatInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTFloatInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Float object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFloatInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTArrayInfo">
            <summary>
            Class <c>DTArrayInfo</c> corresponds to an element of type Array in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTArrayInfo"/> class.
            </summary>
            <param name="id">Identifier for the Array.</param>
            <param name="definedIn">Identifier of the partition in which this Array is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTArrayInfo"/> class.
            </summary>
            <param name="id">Identifier for the Array.</param>
            <param name="definedIn">Identifier of the partition in which this Array is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Array if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTArrayInfo.ElementSchema">
            <summary>
            Gets the value of the 'elementSchema' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTArrayInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.op_Equality(Azure.DigitalTwins.Parser.DTArrayInfo,Azure.DigitalTwins.Parser.DTArrayInfo)">
            <summary>
            Determines whether two <c>DTArrayInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTArrayInfo</c> object to compare.</param>
            <param name="y">Another <c>DTArrayInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.op_Inequality(Azure.DigitalTwins.Parser.DTArrayInfo,Azure.DigitalTwins.Parser.DTArrayInfo)">
            <summary>
            Determines whether two <c>DTArrayInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTArrayInfo</c> object to compare.</param>
            <param name="y">Another <c>DTArrayInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.Equals(Azure.DigitalTwins.Parser.DTArrayInfo)">
            <summary>
            Compares to another <c>DTArrayInfo</c> object.
            </summary>
            <param name="other">The other <c>DTArrayInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTArrayInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTArrayInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTArrayInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTArrayInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Array object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTArrayInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTContentInfo">
            <summary>
            Class <c>DTContentInfo</c> corresponds to an element of type Content in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTContentInfo"/> class.
            </summary>
            <param name="id">Identifier for the Content.</param>
            <param name="definedIn">Identifier of the partition in which this Content is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Content if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTContentInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.op_Equality(Azure.DigitalTwins.Parser.DTContentInfo,Azure.DigitalTwins.Parser.DTContentInfo)">
            <summary>
            Determines whether two <c>DTContentInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTContentInfo</c> object to compare.</param>
            <param name="y">Another <c>DTContentInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.op_Inequality(Azure.DigitalTwins.Parser.DTContentInfo,Azure.DigitalTwins.Parser.DTContentInfo)">
            <summary>
            Determines whether two <c>DTContentInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTContentInfo</c> object to compare.</param>
            <param name="y">Another <c>DTContentInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.Equals(Azure.DigitalTwins.Parser.DTContentInfo)">
            <summary>
            Compares to another <c>DTContentInfo</c> object.
            </summary>
            <param name="other">The other <c>DTContentInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of type <c>DTContentInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object of type <c>DTContentInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTContentInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTContentInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Content object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTContentInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTMapKeyInfo">
            <summary>
            Class <c>DTMapKeyInfo</c> corresponds to an element of type MapKey in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTMapKeyInfo"/> class.
            </summary>
            <param name="id">Identifier for the MapKey.</param>
            <param name="definedIn">Identifier of the partition in which this MapKey is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTMapKeyInfo"/> class.
            </summary>
            <param name="id">Identifier for the MapKey.</param>
            <param name="definedIn">Identifier of the partition in which this MapKey is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than MapKey if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTMapKeyInfo.Schema">
            <summary>
            Gets the value of the 'schema' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTMapKeyInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.op_Equality(Azure.DigitalTwins.Parser.DTMapKeyInfo,Azure.DigitalTwins.Parser.DTMapKeyInfo)">
            <summary>
            Determines whether two <c>DTMapKeyInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTMapKeyInfo</c> object to compare.</param>
            <param name="y">Another <c>DTMapKeyInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.op_Inequality(Azure.DigitalTwins.Parser.DTMapKeyInfo,Azure.DigitalTwins.Parser.DTMapKeyInfo)">
            <summary>
            Determines whether two <c>DTMapKeyInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTMapKeyInfo</c> object to compare.</param>
            <param name="y">Another <c>DTMapKeyInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.Equals(Azure.DigitalTwins.Parser.DTMapKeyInfo)">
            <summary>
            Compares to another <c>DTMapKeyInfo</c> object.
            </summary>
            <param name="other">The other <c>DTMapKeyInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTMapKeyInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTMapKeyInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTMapKeyInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTMapKeyInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON MapKey object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapKeyInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTDurationInfo">
            <summary>
            Class <c>DTDurationInfo</c> corresponds to an element of type Duration in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTDurationInfo"/> class.
            </summary>
            <param name="id">Identifier for the Duration.</param>
            <param name="definedIn">Identifier of the partition in which this Duration is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTDurationInfo"/> class.
            </summary>
            <param name="id">Identifier for the Duration.</param>
            <param name="definedIn">Identifier of the partition in which this Duration is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Duration if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTDurationInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.op_Equality(Azure.DigitalTwins.Parser.DTDurationInfo,Azure.DigitalTwins.Parser.DTDurationInfo)">
            <summary>
            Determines whether two <c>DTDurationInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTDurationInfo</c> object to compare.</param>
            <param name="y">Another <c>DTDurationInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.op_Inequality(Azure.DigitalTwins.Parser.DTDurationInfo,Azure.DigitalTwins.Parser.DTDurationInfo)">
            <summary>
            Determines whether two <c>DTDurationInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTDurationInfo</c> object to compare.</param>
            <param name="y">Another <c>DTDurationInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.Equals(Azure.DigitalTwins.Parser.DTDurationInfo)">
            <summary>
            Compares to another <c>DTDurationInfo</c> object.
            </summary>
            <param name="other">The other <c>DTDurationInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTDurationInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTDurationInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTDurationInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTDurationInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Duration object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDurationInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTDateTimeInfo">
            <summary>
            Class <c>DTDateTimeInfo</c> corresponds to an element of type DateTime in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTDateTimeInfo"/> class.
            </summary>
            <param name="id">Identifier for the DateTime.</param>
            <param name="definedIn">Identifier of the partition in which this DateTime is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTDateTimeInfo"/> class.
            </summary>
            <param name="id">Identifier for the DateTime.</param>
            <param name="definedIn">Identifier of the partition in which this DateTime is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than DateTime if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTDateTimeInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.op_Equality(Azure.DigitalTwins.Parser.DTDateTimeInfo,Azure.DigitalTwins.Parser.DTDateTimeInfo)">
            <summary>
            Determines whether two <c>DTDateTimeInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTDateTimeInfo</c> object to compare.</param>
            <param name="y">Another <c>DTDateTimeInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.op_Inequality(Azure.DigitalTwins.Parser.DTDateTimeInfo,Azure.DigitalTwins.Parser.DTDateTimeInfo)">
            <summary>
            Determines whether two <c>DTDateTimeInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTDateTimeInfo</c> object to compare.</param>
            <param name="y">Another <c>DTDateTimeInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.Equals(Azure.DigitalTwins.Parser.DTDateTimeInfo)">
            <summary>
            Compares to another <c>DTDateTimeInfo</c> object.
            </summary>
            <param name="other">The other <c>DTDateTimeInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTDateTimeInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTDateTimeInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTDateTimeInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTDateTimeInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON DateTime object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateTimeInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTSchemaFieldInfo">
            <summary>
            Class <c>DTSchemaFieldInfo</c> corresponds to an element of type SchemaField in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTSchemaFieldInfo"/> class.
            </summary>
            <param name="id">Identifier for the SchemaField.</param>
            <param name="definedIn">Identifier of the partition in which this SchemaField is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than SchemaField if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.Schema">
            <summary>
            Gets the value of the 'schema' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.op_Equality(Azure.DigitalTwins.Parser.DTSchemaFieldInfo,Azure.DigitalTwins.Parser.DTSchemaFieldInfo)">
            <summary>
            Determines whether two <c>DTSchemaFieldInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTSchemaFieldInfo</c> object to compare.</param>
            <param name="y">Another <c>DTSchemaFieldInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.op_Inequality(Azure.DigitalTwins.Parser.DTSchemaFieldInfo,Azure.DigitalTwins.Parser.DTSchemaFieldInfo)">
            <summary>
            Determines whether two <c>DTSchemaFieldInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTSchemaFieldInfo</c> object to compare.</param>
            <param name="y">Another <c>DTSchemaFieldInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.Equals(Azure.DigitalTwins.Parser.DTSchemaFieldInfo)">
            <summary>
            Compares to another <c>DTSchemaFieldInfo</c> object.
            </summary>
            <param name="other">The other <c>DTSchemaFieldInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of type <c>DTSchemaFieldInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object of type <c>DTSchemaFieldInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTSchemaFieldInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTSchemaFieldInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON SchemaField object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaFieldInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTObjectInfo">
            <summary>
            Class <c>DTObjectInfo</c> corresponds to an element of type Object in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTObjectInfo"/> class.
            </summary>
            <param name="id">Identifier for the Object.</param>
            <param name="definedIn">Identifier of the partition in which this Object is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTObjectInfo"/> class.
            </summary>
            <param name="id">Identifier for the Object.</param>
            <param name="definedIn">Identifier of the partition in which this Object is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Object if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTObjectInfo.Fields">
            <summary>
            Gets the value of the 'fields' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTObjectInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.op_Equality(Azure.DigitalTwins.Parser.DTObjectInfo,Azure.DigitalTwins.Parser.DTObjectInfo)">
            <summary>
            Determines whether two <c>DTObjectInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTObjectInfo</c> object to compare.</param>
            <param name="y">Another <c>DTObjectInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.op_Inequality(Azure.DigitalTwins.Parser.DTObjectInfo,Azure.DigitalTwins.Parser.DTObjectInfo)">
            <summary>
            Determines whether two <c>DTObjectInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTObjectInfo</c> object to compare.</param>
            <param name="y">Another <c>DTObjectInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.Equals(Azure.DigitalTwins.Parser.DTObjectInfo)">
            <summary>
            Compares to another <c>DTObjectInfo</c> object.
            </summary>
            <param name="other">The other <c>DTObjectInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTObjectInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTObjectInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTObjectInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTObjectInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Object object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTObjectInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTDateInfo">
            <summary>
            Class <c>DTDateInfo</c> corresponds to an element of type Date in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTDateInfo"/> class.
            </summary>
            <param name="id">Identifier for the Date.</param>
            <param name="definedIn">Identifier of the partition in which this Date is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTDateInfo"/> class.
            </summary>
            <param name="id">Identifier for the Date.</param>
            <param name="definedIn">Identifier of the partition in which this Date is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Date if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTDateInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.op_Equality(Azure.DigitalTwins.Parser.DTDateInfo,Azure.DigitalTwins.Parser.DTDateInfo)">
            <summary>
            Determines whether two <c>DTDateInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTDateInfo</c> object to compare.</param>
            <param name="y">Another <c>DTDateInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.op_Inequality(Azure.DigitalTwins.Parser.DTDateInfo,Azure.DigitalTwins.Parser.DTDateInfo)">
            <summary>
            Determines whether two <c>DTDateInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTDateInfo</c> object to compare.</param>
            <param name="y">Another <c>DTDateInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.Equals(Azure.DigitalTwins.Parser.DTDateInfo)">
            <summary>
            Compares to another <c>DTDateInfo</c> object.
            </summary>
            <param name="other">The other <c>DTDateInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTDateInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTDateInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTDateInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTDateInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Date object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDateInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTEnumInfo">
            <summary>
            Class <c>DTEnumInfo</c> corresponds to an element of type Enum in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTEnumInfo"/> class.
            </summary>
            <param name="id">Identifier for the Enum.</param>
            <param name="definedIn">Identifier of the partition in which this Enum is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTEnumInfo"/> class.
            </summary>
            <param name="id">Identifier for the Enum.</param>
            <param name="definedIn">Identifier of the partition in which this Enum is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Enum if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTEnumInfo.EnumValues">
            <summary>
            Gets the value of the 'enumValues' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTEnumInfo.ValueSchema">
            <summary>
            Gets the value of the 'valueSchema' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTEnumInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.op_Equality(Azure.DigitalTwins.Parser.DTEnumInfo,Azure.DigitalTwins.Parser.DTEnumInfo)">
            <summary>
            Determines whether two <c>DTEnumInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTEnumInfo</c> object to compare.</param>
            <param name="y">Another <c>DTEnumInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.op_Inequality(Azure.DigitalTwins.Parser.DTEnumInfo,Azure.DigitalTwins.Parser.DTEnumInfo)">
            <summary>
            Determines whether two <c>DTEnumInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTEnumInfo</c> object to compare.</param>
            <param name="y">Another <c>DTEnumInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.Equals(Azure.DigitalTwins.Parser.DTEnumInfo)">
            <summary>
            Compares to another <c>DTEnumInfo</c> object.
            </summary>
            <param name="other">The other <c>DTEnumInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTEnumInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTEnumInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTEnumInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTEnumInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Enum object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo">
            <summary>
            Class <c>DTTemporalSchemaInfo</c> corresponds to an element of type TemporalSchema in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo"/> class.
            </summary>
            <param name="id">Identifier for the TemporalSchema.</param>
            <param name="definedIn">Identifier of the partition in which this TemporalSchema is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than TemporalSchema if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.op_Equality(Azure.DigitalTwins.Parser.DTTemporalSchemaInfo,Azure.DigitalTwins.Parser.DTTemporalSchemaInfo)">
            <summary>
            Determines whether two <c>DTTemporalSchemaInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTTemporalSchemaInfo</c> object to compare.</param>
            <param name="y">Another <c>DTTemporalSchemaInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.op_Inequality(Azure.DigitalTwins.Parser.DTTemporalSchemaInfo,Azure.DigitalTwins.Parser.DTTemporalSchemaInfo)">
            <summary>
            Determines whether two <c>DTTemporalSchemaInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTTemporalSchemaInfo</c> object to compare.</param>
            <param name="y">Another <c>DTTemporalSchemaInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.Equals(Azure.DigitalTwins.Parser.DTTemporalSchemaInfo)">
            <summary>
            Compares to another <c>DTTemporalSchemaInfo</c> object.
            </summary>
            <param name="other">The other <c>DTTemporalSchemaInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of type <c>DTTemporalSchemaInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object of type <c>DTTemporalSchemaInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTTemporalSchemaInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON TemporalSchema object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTemporalSchemaInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTEnumValueInfo">
            <summary>
            Class <c>DTEnumValueInfo</c> corresponds to an element of type EnumValue in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTEnumValueInfo"/> class.
            </summary>
            <param name="id">Identifier for the EnumValue.</param>
            <param name="definedIn">Identifier of the partition in which this EnumValue is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTEnumValueInfo"/> class.
            </summary>
            <param name="id">Identifier for the EnumValue.</param>
            <param name="definedIn">Identifier of the partition in which this EnumValue is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than EnumValue if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTEnumValueInfo.EnumValue">
            <summary>
            Gets the value of the 'enumValue' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTEnumValueInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.op_Equality(Azure.DigitalTwins.Parser.DTEnumValueInfo,Azure.DigitalTwins.Parser.DTEnumValueInfo)">
            <summary>
            Determines whether two <c>DTEnumValueInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTEnumValueInfo</c> object to compare.</param>
            <param name="y">Another <c>DTEnumValueInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.op_Inequality(Azure.DigitalTwins.Parser.DTEnumValueInfo,Azure.DigitalTwins.Parser.DTEnumValueInfo)">
            <summary>
            Determines whether two <c>DTEnumValueInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTEnumValueInfo</c> object to compare.</param>
            <param name="y">Another <c>DTEnumValueInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.Equals(Azure.DigitalTwins.Parser.DTEnumValueInfo)">
            <summary>
            Compares to another <c>DTEnumValueInfo</c> object.
            </summary>
            <param name="other">The other <c>DTEnumValueInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTEnumValueInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTEnumValueInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTEnumValueInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTEnumValueInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON EnumValue object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEnumValueInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTCommandPayloadInfo">
            <summary>
            Class <c>DTCommandPayloadInfo</c> corresponds to an element of type CommandPayload in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTCommandPayloadInfo"/> class.
            </summary>
            <param name="id">Identifier for the CommandPayload.</param>
            <param name="definedIn">Identifier of the partition in which this CommandPayload is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTCommandPayloadInfo"/> class.
            </summary>
            <param name="id">Identifier for the CommandPayload.</param>
            <param name="definedIn">Identifier of the partition in which this CommandPayload is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than CommandPayload if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.op_Equality(Azure.DigitalTwins.Parser.DTCommandPayloadInfo,Azure.DigitalTwins.Parser.DTCommandPayloadInfo)">
            <summary>
            Determines whether two <c>DTCommandPayloadInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTCommandPayloadInfo</c> object to compare.</param>
            <param name="y">Another <c>DTCommandPayloadInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.op_Inequality(Azure.DigitalTwins.Parser.DTCommandPayloadInfo,Azure.DigitalTwins.Parser.DTCommandPayloadInfo)">
            <summary>
            Determines whether two <c>DTCommandPayloadInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTCommandPayloadInfo</c> object to compare.</param>
            <param name="y">Another <c>DTCommandPayloadInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.Equals(Azure.DigitalTwins.Parser.DTCommandPayloadInfo)">
            <summary>
            Compares to another <c>DTCommandPayloadInfo</c> object.
            </summary>
            <param name="other">The other <c>DTCommandPayloadInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTCommandPayloadInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTCommandPayloadInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTCommandPayloadInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTCommandPayloadInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON CommandPayload object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandPayloadInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTCommandTypeInfo">
            <summary>
            Class <c>DTCommandTypeInfo</c> corresponds to an element of type CommandType in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTCommandTypeInfo"/> class.
            </summary>
            <param name="id">Identifier for the CommandType.</param>
            <param name="definedIn">Identifier of the partition in which this CommandType is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTCommandTypeInfo"/> class.
            </summary>
            <param name="id">Identifier for the CommandType.</param>
            <param name="definedIn">Identifier of the partition in which this CommandType is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than CommandType if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTCommandTypeInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.op_Equality(Azure.DigitalTwins.Parser.DTCommandTypeInfo,Azure.DigitalTwins.Parser.DTCommandTypeInfo)">
            <summary>
            Determines whether two <c>DTCommandTypeInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTCommandTypeInfo</c> object to compare.</param>
            <param name="y">Another <c>DTCommandTypeInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.op_Inequality(Azure.DigitalTwins.Parser.DTCommandTypeInfo,Azure.DigitalTwins.Parser.DTCommandTypeInfo)">
            <summary>
            Determines whether two <c>DTCommandTypeInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTCommandTypeInfo</c> object to compare.</param>
            <param name="y">Another <c>DTCommandTypeInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.Equals(Azure.DigitalTwins.Parser.DTCommandTypeInfo)">
            <summary>
            Compares to another <c>DTCommandTypeInfo</c> object.
            </summary>
            <param name="other">The other <c>DTCommandTypeInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTCommandTypeInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTCommandTypeInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTCommandTypeInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTCommandTypeInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON CommandType object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandTypeInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTFieldInfo">
            <summary>
            Class <c>DTFieldInfo</c> corresponds to an element of type Field in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTFieldInfo"/> class.
            </summary>
            <param name="id">Identifier for the Field.</param>
            <param name="definedIn">Identifier of the partition in which this Field is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTFieldInfo"/> class.
            </summary>
            <param name="id">Identifier for the Field.</param>
            <param name="definedIn">Identifier of the partition in which this Field is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Field if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTFieldInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.op_Equality(Azure.DigitalTwins.Parser.DTFieldInfo,Azure.DigitalTwins.Parser.DTFieldInfo)">
            <summary>
            Determines whether two <c>DTFieldInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTFieldInfo</c> object to compare.</param>
            <param name="y">Another <c>DTFieldInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.op_Inequality(Azure.DigitalTwins.Parser.DTFieldInfo,Azure.DigitalTwins.Parser.DTFieldInfo)">
            <summary>
            Determines whether two <c>DTFieldInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTFieldInfo</c> object to compare.</param>
            <param name="y">Another <c>DTFieldInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.Equals(Azure.DigitalTwins.Parser.DTFieldInfo)">
            <summary>
            Compares to another <c>DTFieldInfo</c> object.
            </summary>
            <param name="other">The other <c>DTFieldInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTFieldInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTFieldInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTFieldInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTFieldInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Field object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTFieldInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTIntegerInfo">
            <summary>
            Class <c>DTIntegerInfo</c> corresponds to an element of type Integer in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTIntegerInfo"/> class.
            </summary>
            <param name="id">Identifier for the Integer.</param>
            <param name="definedIn">Identifier of the partition in which this Integer is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTIntegerInfo"/> class.
            </summary>
            <param name="id">Identifier for the Integer.</param>
            <param name="definedIn">Identifier of the partition in which this Integer is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Integer if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTIntegerInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.op_Equality(Azure.DigitalTwins.Parser.DTIntegerInfo,Azure.DigitalTwins.Parser.DTIntegerInfo)">
            <summary>
            Determines whether two <c>DTIntegerInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTIntegerInfo</c> object to compare.</param>
            <param name="y">Another <c>DTIntegerInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.op_Inequality(Azure.DigitalTwins.Parser.DTIntegerInfo,Azure.DigitalTwins.Parser.DTIntegerInfo)">
            <summary>
            Determines whether two <c>DTIntegerInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTIntegerInfo</c> object to compare.</param>
            <param name="y">Another <c>DTIntegerInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.Equals(Azure.DigitalTwins.Parser.DTIntegerInfo)">
            <summary>
            Compares to another <c>DTIntegerInfo</c> object.
            </summary>
            <param name="other">The other <c>DTIntegerInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTIntegerInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTIntegerInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTIntegerInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTIntegerInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Integer object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTIntegerInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTPropertyInfo">
            <summary>
            Class <c>DTPropertyInfo</c> corresponds to an element of type Property in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTPropertyInfo"/> class.
            </summary>
            <param name="id">Identifier for the Property.</param>
            <param name="definedIn">Identifier of the partition in which this Property is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTPropertyInfo"/> class.
            </summary>
            <param name="id">Identifier for the Property.</param>
            <param name="definedIn">Identifier of the partition in which this Property is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Property if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTPropertyInfo.Schema">
            <summary>
            Gets the value of the 'schema' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTPropertyInfo.Writable">
            <summary>
            Gets the value of the 'writable' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTPropertyInfo.SupplementalTypes">
            <summary>
            Gets a collection of identifiers, each of which is a <c>Dtmi</c> that indicates a supplemental type that applies to the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTPropertyInfo.SupplementalProperties">
            <summary>
            Gets the supplemantal properties of the DTDL element that corresponds to this object.
            </summary>
            <value>
            A dictionary that maps each string-valued property name to an object that holds the value of the property with the given name.
            </value>
            <remarks>
            If the property is a literal in the DTDL model, the object holds a literal value.
            If the property is another DTDL element in the model, the object is the C# object that corresponds to this element.
            </remarks>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTPropertyInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.op_Equality(Azure.DigitalTwins.Parser.DTPropertyInfo,Azure.DigitalTwins.Parser.DTPropertyInfo)">
            <summary>
            Determines whether two <c>DTPropertyInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTPropertyInfo</c> object to compare.</param>
            <param name="y">Another <c>DTPropertyInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.op_Inequality(Azure.DigitalTwins.Parser.DTPropertyInfo,Azure.DigitalTwins.Parser.DTPropertyInfo)">
            <summary>
            Determines whether two <c>DTPropertyInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTPropertyInfo</c> object to compare.</param>
            <param name="y">Another <c>DTPropertyInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.Equals(Azure.DigitalTwins.Parser.DTPropertyInfo)">
            <summary>
            Compares to another <c>DTPropertyInfo</c> object.
            </summary>
            <param name="other">The other <c>DTPropertyInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.Azure#DigitalTwins#Parser#IPropertyValueConstrainer#AddConstraint(System.String,Azure.DigitalTwins.Parser.ValueConstraint)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTPropertyInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTPropertyInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTPropertyInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTPropertyInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Property object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPropertyInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTDoubleInfo">
            <summary>
            Class <c>DTDoubleInfo</c> corresponds to an element of type Double in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTDoubleInfo"/> class.
            </summary>
            <param name="id">Identifier for the Double.</param>
            <param name="definedIn">Identifier of the partition in which this Double is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTDoubleInfo"/> class.
            </summary>
            <param name="id">Identifier for the Double.</param>
            <param name="definedIn">Identifier of the partition in which this Double is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Double if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTDoubleInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.op_Equality(Azure.DigitalTwins.Parser.DTDoubleInfo,Azure.DigitalTwins.Parser.DTDoubleInfo)">
            <summary>
            Determines whether two <c>DTDoubleInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTDoubleInfo</c> object to compare.</param>
            <param name="y">Another <c>DTDoubleInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.op_Inequality(Azure.DigitalTwins.Parser.DTDoubleInfo,Azure.DigitalTwins.Parser.DTDoubleInfo)">
            <summary>
            Determines whether two <c>DTDoubleInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTDoubleInfo</c> object to compare.</param>
            <param name="y">Another <c>DTDoubleInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.Equals(Azure.DigitalTwins.Parser.DTDoubleInfo)">
            <summary>
            Compares to another <c>DTDoubleInfo</c> object.
            </summary>
            <param name="other">The other <c>DTDoubleInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTDoubleInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTDoubleInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTDoubleInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTDoubleInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Double object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTDoubleInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTComponentInfo">
            <summary>
            Class <c>DTComponentInfo</c> corresponds to an element of type Component in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTComponentInfo"/> class.
            </summary>
            <param name="id">Identifier for the Component.</param>
            <param name="definedIn">Identifier of the partition in which this Component is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTComponentInfo"/> class.
            </summary>
            <param name="id">Identifier for the Component.</param>
            <param name="definedIn">Identifier of the partition in which this Component is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Component if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTComponentInfo.Schema">
            <summary>
            Gets the value of the 'schema' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTComponentInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.op_Equality(Azure.DigitalTwins.Parser.DTComponentInfo,Azure.DigitalTwins.Parser.DTComponentInfo)">
            <summary>
            Determines whether two <c>DTComponentInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTComponentInfo</c> object to compare.</param>
            <param name="y">Another <c>DTComponentInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.op_Inequality(Azure.DigitalTwins.Parser.DTComponentInfo,Azure.DigitalTwins.Parser.DTComponentInfo)">
            <summary>
            Determines whether two <c>DTComponentInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTComponentInfo</c> object to compare.</param>
            <param name="y">Another <c>DTComponentInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.Equals(Azure.DigitalTwins.Parser.DTComponentInfo)">
            <summary>
            Compares to another <c>DTComponentInfo</c> object.
            </summary>
            <param name="other">The other <c>DTComponentInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTComponentInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTComponentInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTComponentInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTComponentInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Component object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComponentInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTTelemetryInfo">
            <summary>
            Class <c>DTTelemetryInfo</c> corresponds to an element of type Telemetry in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTTelemetryInfo"/> class.
            </summary>
            <param name="id">Identifier for the Telemetry.</param>
            <param name="definedIn">Identifier of the partition in which this Telemetry is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTTelemetryInfo"/> class.
            </summary>
            <param name="id">Identifier for the Telemetry.</param>
            <param name="definedIn">Identifier of the partition in which this Telemetry is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Telemetry if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTTelemetryInfo.Schema">
            <summary>
            Gets the value of the 'schema' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTTelemetryInfo.SupplementalTypes">
            <summary>
            Gets a collection of identifiers, each of which is a <c>Dtmi</c> that indicates a supplemental type that applies to the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTTelemetryInfo.SupplementalProperties">
            <summary>
            Gets the supplemantal properties of the DTDL element that corresponds to this object.
            </summary>
            <value>
            A dictionary that maps each string-valued property name to an object that holds the value of the property with the given name.
            </value>
            <remarks>
            If the property is a literal in the DTDL model, the object holds a literal value.
            If the property is another DTDL element in the model, the object is the C# object that corresponds to this element.
            </remarks>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTTelemetryInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.op_Equality(Azure.DigitalTwins.Parser.DTTelemetryInfo,Azure.DigitalTwins.Parser.DTTelemetryInfo)">
            <summary>
            Determines whether two <c>DTTelemetryInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTTelemetryInfo</c> object to compare.</param>
            <param name="y">Another <c>DTTelemetryInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.op_Inequality(Azure.DigitalTwins.Parser.DTTelemetryInfo,Azure.DigitalTwins.Parser.DTTelemetryInfo)">
            <summary>
            Determines whether two <c>DTTelemetryInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTTelemetryInfo</c> object to compare.</param>
            <param name="y">Another <c>DTTelemetryInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.Equals(Azure.DigitalTwins.Parser.DTTelemetryInfo)">
            <summary>
            Compares to another <c>DTTelemetryInfo</c> object.
            </summary>
            <param name="other">The other <c>DTTelemetryInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.Azure#DigitalTwins#Parser#IPropertyValueConstrainer#AddConstraint(System.String,Azure.DigitalTwins.Parser.ValueConstraint)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTTelemetryInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTTelemetryInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTTelemetryInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTTelemetryInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Telemetry object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTelemetryInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTSchemaInfo">
            <summary>
            Class <c>DTSchemaInfo</c> corresponds to an element of type Schema in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTSchemaInfo"/> class.
            </summary>
            <param name="id">Identifier for the Schema.</param>
            <param name="definedIn">Identifier of the partition in which this Schema is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Schema if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTSchemaInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.op_Equality(Azure.DigitalTwins.Parser.DTSchemaInfo,Azure.DigitalTwins.Parser.DTSchemaInfo)">
            <summary>
            Determines whether two <c>DTSchemaInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTSchemaInfo</c> object to compare.</param>
            <param name="y">Another <c>DTSchemaInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.op_Inequality(Azure.DigitalTwins.Parser.DTSchemaInfo,Azure.DigitalTwins.Parser.DTSchemaInfo)">
            <summary>
            Determines whether two <c>DTSchemaInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTSchemaInfo</c> object to compare.</param>
            <param name="y">Another <c>DTSchemaInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.Equals(Azure.DigitalTwins.Parser.DTSchemaInfo)">
            <summary>
            Compares to another <c>DTSchemaInfo</c> object.
            </summary>
            <param name="other">The other <c>DTSchemaInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of type <c>DTSchemaInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object of type <c>DTSchemaInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTSchemaInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTSchemaInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Schema object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTSchemaInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTRelationshipInfo">
            <summary>
            Class <c>DTRelationshipInfo</c> corresponds to an element of type Relationship in a DTDL model.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTRelationshipInfo.TargetRegexPattern">
            <summary>
            Regular expression pattern for values of property Target.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTRelationshipInfo"/> class.
            </summary>
            <param name="id">Identifier for the Relationship.</param>
            <param name="definedIn">Identifier of the partition in which this Relationship is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTRelationshipInfo"/> class.
            </summary>
            <param name="id">Identifier for the Relationship.</param>
            <param name="definedIn">Identifier of the partition in which this Relationship is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Relationship if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTRelationshipInfo.MaxMultiplicity">
            <summary>
            Gets the value of the 'maxMultiplicity' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTRelationshipInfo.MinMultiplicity">
            <summary>
            Gets the value of the 'minMultiplicity' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTRelationshipInfo.Properties">
            <summary>
            Gets the value of the 'properties' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTRelationshipInfo.Target">
            <summary>
            Gets the value of the 'target' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTRelationshipInfo.Writable">
            <summary>
            Gets the value of the 'writable' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTRelationshipInfo.SupplementalTypes">
            <summary>
            Gets a collection of identifiers, each of which is a <c>Dtmi</c> that indicates a supplemental type that applies to the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTRelationshipInfo.SupplementalProperties">
            <summary>
            Gets the supplemantal properties of the DTDL element that corresponds to this object.
            </summary>
            <value>
            A dictionary that maps each string-valued property name to an object that holds the value of the property with the given name.
            </value>
            <remarks>
            If the property is a literal in the DTDL model, the object holds a literal value.
            If the property is another DTDL element in the model, the object is the C# object that corresponds to this element.
            </remarks>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTRelationshipInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.op_Equality(Azure.DigitalTwins.Parser.DTRelationshipInfo,Azure.DigitalTwins.Parser.DTRelationshipInfo)">
            <summary>
            Determines whether two <c>DTRelationshipInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTRelationshipInfo</c> object to compare.</param>
            <param name="y">Another <c>DTRelationshipInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.op_Inequality(Azure.DigitalTwins.Parser.DTRelationshipInfo,Azure.DigitalTwins.Parser.DTRelationshipInfo)">
            <summary>
            Determines whether two <c>DTRelationshipInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTRelationshipInfo</c> object to compare.</param>
            <param name="y">Another <c>DTRelationshipInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.Equals(Azure.DigitalTwins.Parser.DTRelationshipInfo)">
            <summary>
            Compares to another <c>DTRelationshipInfo</c> object.
            </summary>
            <param name="other">The other <c>DTRelationshipInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.Azure#DigitalTwins#Parser#IPropertyValueConstrainer#AddConstraint(System.String,Azure.DigitalTwins.Parser.ValueConstraint)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTRelationshipInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTRelationshipInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTRelationshipInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTRelationshipInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Relationship object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTRelationshipInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTTimeInfo">
            <summary>
            Class <c>DTTimeInfo</c> corresponds to an element of type Time in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTTimeInfo"/> class.
            </summary>
            <param name="id">Identifier for the Time.</param>
            <param name="definedIn">Identifier of the partition in which this Time is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTTimeInfo"/> class.
            </summary>
            <param name="id">Identifier for the Time.</param>
            <param name="definedIn">Identifier of the partition in which this Time is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Time if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTTimeInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.op_Equality(Azure.DigitalTwins.Parser.DTTimeInfo,Azure.DigitalTwins.Parser.DTTimeInfo)">
            <summary>
            Determines whether two <c>DTTimeInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTTimeInfo</c> object to compare.</param>
            <param name="y">Another <c>DTTimeInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.op_Inequality(Azure.DigitalTwins.Parser.DTTimeInfo,Azure.DigitalTwins.Parser.DTTimeInfo)">
            <summary>
            Determines whether two <c>DTTimeInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTTimeInfo</c> object to compare.</param>
            <param name="y">Another <c>DTTimeInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.Equals(Azure.DigitalTwins.Parser.DTTimeInfo)">
            <summary>
            Compares to another <c>DTTimeInfo</c> object.
            </summary>
            <param name="other">The other <c>DTTimeInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTTimeInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTTimeInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTTimeInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTTimeInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Time object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTTimeInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTStringInfo">
            <summary>
            Class <c>DTStringInfo</c> corresponds to an element of type String in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTStringInfo"/> class.
            </summary>
            <param name="id">Identifier for the String.</param>
            <param name="definedIn">Identifier of the partition in which this String is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTStringInfo"/> class.
            </summary>
            <param name="id">Identifier for the String.</param>
            <param name="definedIn">Identifier of the partition in which this String is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than String if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTStringInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.op_Equality(Azure.DigitalTwins.Parser.DTStringInfo,Azure.DigitalTwins.Parser.DTStringInfo)">
            <summary>
            Determines whether two <c>DTStringInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTStringInfo</c> object to compare.</param>
            <param name="y">Another <c>DTStringInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.op_Inequality(Azure.DigitalTwins.Parser.DTStringInfo,Azure.DigitalTwins.Parser.DTStringInfo)">
            <summary>
            Determines whether two <c>DTStringInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTStringInfo</c> object to compare.</param>
            <param name="y">Another <c>DTStringInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.Equals(Azure.DigitalTwins.Parser.DTStringInfo)">
            <summary>
            Compares to another <c>DTStringInfo</c> object.
            </summary>
            <param name="other">The other <c>DTStringInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTStringInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTStringInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTStringInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTStringInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON String object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTStringInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTBooleanInfo">
            <summary>
            Class <c>DTBooleanInfo</c> corresponds to an element of type Boolean in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTBooleanInfo"/> class.
            </summary>
            <param name="id">Identifier for the Boolean.</param>
            <param name="definedIn">Identifier of the partition in which this Boolean is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTBooleanInfo"/> class.
            </summary>
            <param name="id">Identifier for the Boolean.</param>
            <param name="definedIn">Identifier of the partition in which this Boolean is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Boolean if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTBooleanInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.op_Equality(Azure.DigitalTwins.Parser.DTBooleanInfo,Azure.DigitalTwins.Parser.DTBooleanInfo)">
            <summary>
            Determines whether two <c>DTBooleanInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTBooleanInfo</c> object to compare.</param>
            <param name="y">Another <c>DTBooleanInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.op_Inequality(Azure.DigitalTwins.Parser.DTBooleanInfo,Azure.DigitalTwins.Parser.DTBooleanInfo)">
            <summary>
            Determines whether two <c>DTBooleanInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTBooleanInfo</c> object to compare.</param>
            <param name="y">Another <c>DTBooleanInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.Equals(Azure.DigitalTwins.Parser.DTBooleanInfo)">
            <summary>
            Compares to another <c>DTBooleanInfo</c> object.
            </summary>
            <param name="other">The other <c>DTBooleanInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTBooleanInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTBooleanInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTBooleanInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTBooleanInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Boolean object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTBooleanInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTUnitAttributeInfo">
            <summary>
            Class <c>DTUnitAttributeInfo</c> corresponds to an element of type UnitAttribute in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTUnitAttributeInfo"/> class.
            </summary>
            <param name="id">Identifier for the UnitAttribute.</param>
            <param name="definedIn">Identifier of the partition in which this UnitAttribute is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTUnitAttributeInfo"/> class.
            </summary>
            <param name="id">Identifier for the UnitAttribute.</param>
            <param name="definedIn">Identifier of the partition in which this UnitAttribute is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than UnitAttribute if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.SupplementalTypes">
            <summary>
            Gets a collection of identifiers, each of which is a <c>Dtmi</c> that indicates a supplemental type that applies to the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.SupplementalProperties">
            <summary>
            Gets the supplemantal properties of the DTDL element that corresponds to this object.
            </summary>
            <value>
            A dictionary that maps each string-valued property name to an object that holds the value of the property with the given name.
            </value>
            <remarks>
            If the property is a literal in the DTDL model, the object holds a literal value.
            If the property is another DTDL element in the model, the object is the C# object that corresponds to this element.
            </remarks>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.op_Equality(Azure.DigitalTwins.Parser.DTUnitAttributeInfo,Azure.DigitalTwins.Parser.DTUnitAttributeInfo)">
            <summary>
            Determines whether two <c>DTUnitAttributeInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTUnitAttributeInfo</c> object to compare.</param>
            <param name="y">Another <c>DTUnitAttributeInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.op_Inequality(Azure.DigitalTwins.Parser.DTUnitAttributeInfo,Azure.DigitalTwins.Parser.DTUnitAttributeInfo)">
            <summary>
            Determines whether two <c>DTUnitAttributeInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTUnitAttributeInfo</c> object to compare.</param>
            <param name="y">Another <c>DTUnitAttributeInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.Equals(Azure.DigitalTwins.Parser.DTUnitAttributeInfo)">
            <summary>
            Compares to another <c>DTUnitAttributeInfo</c> object.
            </summary>
            <param name="other">The other <c>DTUnitAttributeInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTUnitAttributeInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTUnitAttributeInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTUnitAttributeInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTUnitAttributeInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON UnitAttribute object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitAttributeInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTInterfaceInfo">
            <summary>
            Class <c>DTInterfaceInfo</c> corresponds to an element of type Interface in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTInterfaceInfo"/> class.
            </summary>
            <param name="id">Identifier for the Interface.</param>
            <param name="definedIn">Identifier of the partition in which this Interface is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTInterfaceInfo"/> class.
            </summary>
            <param name="id">Identifier for the Interface.</param>
            <param name="definedIn">Identifier of the partition in which this Interface is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Interface if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTInterfaceInfo.Contents">
            <summary>
            Gets the value of the 'contents' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTInterfaceInfo.Extends">
            <summary>
            Gets the value of the 'extends' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTInterfaceInfo.Schemas">
            <summary>
            Gets the value of the 'schemas' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTInterfaceInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.op_Equality(Azure.DigitalTwins.Parser.DTInterfaceInfo,Azure.DigitalTwins.Parser.DTInterfaceInfo)">
            <summary>
            Determines whether two <c>DTInterfaceInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTInterfaceInfo</c> object to compare.</param>
            <param name="y">Another <c>DTInterfaceInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.op_Inequality(Azure.DigitalTwins.Parser.DTInterfaceInfo,Azure.DigitalTwins.Parser.DTInterfaceInfo)">
            <summary>
            Determines whether two <c>DTInterfaceInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTInterfaceInfo</c> object to compare.</param>
            <param name="y">Another <c>DTInterfaceInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.GetJsonLdText">
            <summary>
            Gets a JSON string that holds the portion of the DTDL model that defines this Interface.
            </summary>
            <returns>A string containing the JSON text.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.GetPackagedObjectModel">
            <summary>
            Gets a JSON string that holds a packaged version of the object model rooted at this Interface.
            </summary>
            <remarks>
            The packaged object model can be rehydrated by calling the static method <c>ModelParser.HydrateObjectModel()</c>.
            </remarks>
            <returns>A string containing the JSON text.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.Equals(Azure.DigitalTwins.Parser.DTInterfaceInfo)">
            <summary>
            Compares to another <c>DTInterfaceInfo</c> object.
            </summary>
            <param name="other">The other <c>DTInterfaceInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTInterfaceInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTInterfaceInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTInterfaceInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTInterfaceInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Interface object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.ImportContents(Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.Dictionary{System.String,Azure.DigitalTwins.Parser.DTContentInfo},Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Copy the values of this object's Contents property into <paramref name="contents"/>.
            </summary>
            <param name="ancestorId">The identifier of the ancestor element whose obverse class invokes the method.</param>
            <param name="importPropertyName">The name of the property responsible for the importing.</param>
            <param name="contents">The destination for the copied values.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTInterfaceInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTUnitInfo">
            <summary>
            Class <c>DTUnitInfo</c> corresponds to an element of type Unit in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTUnitInfo"/> class.
            </summary>
            <param name="id">Identifier for the Unit.</param>
            <param name="definedIn">Identifier of the partition in which this Unit is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTUnitInfo"/> class.
            </summary>
            <param name="id">Identifier for the Unit.</param>
            <param name="definedIn">Identifier of the partition in which this Unit is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Unit if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTUnitInfo.Symbol">
            <summary>
            Gets the value of the 'symbol' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTUnitInfo.SupplementalTypes">
            <summary>
            Gets a collection of identifiers, each of which is a <c>Dtmi</c> that indicates a supplemental type that applies to the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTUnitInfo.SupplementalProperties">
            <summary>
            Gets the supplemantal properties of the DTDL element that corresponds to this object.
            </summary>
            <value>
            A dictionary that maps each string-valued property name to an object that holds the value of the property with the given name.
            </value>
            <remarks>
            If the property is a literal in the DTDL model, the object holds a literal value.
            If the property is another DTDL element in the model, the object is the C# object that corresponds to this element.
            </remarks>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTUnitInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.op_Equality(Azure.DigitalTwins.Parser.DTUnitInfo,Azure.DigitalTwins.Parser.DTUnitInfo)">
            <summary>
            Determines whether two <c>DTUnitInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTUnitInfo</c> object to compare.</param>
            <param name="y">Another <c>DTUnitInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.op_Inequality(Azure.DigitalTwins.Parser.DTUnitInfo,Azure.DigitalTwins.Parser.DTUnitInfo)">
            <summary>
            Determines whether two <c>DTUnitInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTUnitInfo</c> object to compare.</param>
            <param name="y">Another <c>DTUnitInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.Equals(Azure.DigitalTwins.Parser.DTUnitInfo)">
            <summary>
            Compares to another <c>DTUnitInfo</c> object.
            </summary>
            <param name="other">The other <c>DTUnitInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTUnitInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTUnitInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTUnitInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTUnitInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Unit object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTUnitInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTMapInfo">
            <summary>
            Class <c>DTMapInfo</c> corresponds to an element of type Map in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTMapInfo"/> class.
            </summary>
            <param name="id">Identifier for the Map.</param>
            <param name="definedIn">Identifier of the partition in which this Map is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTMapInfo"/> class.
            </summary>
            <param name="id">Identifier for the Map.</param>
            <param name="definedIn">Identifier of the partition in which this Map is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Map if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTMapInfo.MapKey">
            <summary>
            Gets the value of the 'mapKey' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTMapInfo.MapValue">
            <summary>
            Gets the value of the 'mapValue' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTMapInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.op_Equality(Azure.DigitalTwins.Parser.DTMapInfo,Azure.DigitalTwins.Parser.DTMapInfo)">
            <summary>
            Determines whether two <c>DTMapInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTMapInfo</c> object to compare.</param>
            <param name="y">Another <c>DTMapInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.op_Inequality(Azure.DigitalTwins.Parser.DTMapInfo,Azure.DigitalTwins.Parser.DTMapInfo)">
            <summary>
            Determines whether two <c>DTMapInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTMapInfo</c> object to compare.</param>
            <param name="y">Another <c>DTMapInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.Equals(Azure.DigitalTwins.Parser.DTMapInfo)">
            <summary>
            Compares to another <c>DTMapInfo</c> object.
            </summary>
            <param name="other">The other <c>DTMapInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTMapInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTMapInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTMapInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTMapInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Map object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTComplexSchemaInfo">
            <summary>
            Class <c>DTComplexSchemaInfo</c> corresponds to an element of type ComplexSchema in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTComplexSchemaInfo"/> class.
            </summary>
            <param name="id">Identifier for the ComplexSchema.</param>
            <param name="definedIn">Identifier of the partition in which this ComplexSchema is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than ComplexSchema if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.op_Equality(Azure.DigitalTwins.Parser.DTComplexSchemaInfo,Azure.DigitalTwins.Parser.DTComplexSchemaInfo)">
            <summary>
            Determines whether two <c>DTComplexSchemaInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTComplexSchemaInfo</c> object to compare.</param>
            <param name="y">Another <c>DTComplexSchemaInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.op_Inequality(Azure.DigitalTwins.Parser.DTComplexSchemaInfo,Azure.DigitalTwins.Parser.DTComplexSchemaInfo)">
            <summary>
            Determines whether two <c>DTComplexSchemaInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTComplexSchemaInfo</c> object to compare.</param>
            <param name="y">Another <c>DTComplexSchemaInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.Equals(Azure.DigitalTwins.Parser.DTComplexSchemaInfo)">
            <summary>
            Compares to another <c>DTComplexSchemaInfo</c> object.
            </summary>
            <param name="other">The other <c>DTComplexSchemaInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of type <c>DTComplexSchemaInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object of type <c>DTComplexSchemaInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTComplexSchemaInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTComplexSchemaInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON ComplexSchema object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTComplexSchemaInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTNamedEntityInfo">
            <summary>
            Class <c>DTNamedEntityInfo</c> corresponds to an element of type NamedEntity in a DTDL model.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTNamedEntityInfo.NameRegexPattern">
            <summary>
            Regular expression pattern for values of property Name.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTNamedEntityInfo"/> class.
            </summary>
            <param name="id">Identifier for the NamedEntity.</param>
            <param name="definedIn">Identifier of the partition in which this NamedEntity is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than NamedEntity if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTNamedEntityInfo.Name">
            <summary>
            Gets the value of the 'name' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTNamedEntityInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.op_Equality(Azure.DigitalTwins.Parser.DTNamedEntityInfo,Azure.DigitalTwins.Parser.DTNamedEntityInfo)">
            <summary>
            Determines whether two <c>DTNamedEntityInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTNamedEntityInfo</c> object to compare.</param>
            <param name="y">Another <c>DTNamedEntityInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.op_Inequality(Azure.DigitalTwins.Parser.DTNamedEntityInfo,Azure.DigitalTwins.Parser.DTNamedEntityInfo)">
            <summary>
            Determines whether two <c>DTNamedEntityInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTNamedEntityInfo</c> object to compare.</param>
            <param name="y">Another <c>DTNamedEntityInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.Equals(Azure.DigitalTwins.Parser.DTNamedEntityInfo)">
            <summary>
            Compares to another <c>DTNamedEntityInfo</c> object.
            </summary>
            <param name="other">The other <c>DTNamedEntityInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of type <c>DTNamedEntityInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object of type <c>DTNamedEntityInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTNamedEntityInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTNamedEntityInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON NamedEntity object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNamedEntityInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTNumericSchemaInfo">
            <summary>
            Class <c>DTNumericSchemaInfo</c> corresponds to an element of type NumericSchema in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTNumericSchemaInfo"/> class.
            </summary>
            <param name="id">Identifier for the NumericSchema.</param>
            <param name="definedIn">Identifier of the partition in which this NumericSchema is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than NumericSchema if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.op_Equality(Azure.DigitalTwins.Parser.DTNumericSchemaInfo,Azure.DigitalTwins.Parser.DTNumericSchemaInfo)">
            <summary>
            Determines whether two <c>DTNumericSchemaInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTNumericSchemaInfo</c> object to compare.</param>
            <param name="y">Another <c>DTNumericSchemaInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.op_Inequality(Azure.DigitalTwins.Parser.DTNumericSchemaInfo,Azure.DigitalTwins.Parser.DTNumericSchemaInfo)">
            <summary>
            Determines whether two <c>DTNumericSchemaInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTNumericSchemaInfo</c> object to compare.</param>
            <param name="y">Another <c>DTNumericSchemaInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.Equals(Azure.DigitalTwins.Parser.DTNumericSchemaInfo)">
            <summary>
            Compares to another <c>DTNumericSchemaInfo</c> object.
            </summary>
            <param name="other">The other <c>DTNumericSchemaInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of type <c>DTNumericSchemaInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object of type <c>DTNumericSchemaInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTNumericSchemaInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTNumericSchemaInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON NumericSchema object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTNumericSchemaInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTMapValueInfo">
            <summary>
            Class <c>DTMapValueInfo</c> corresponds to an element of type MapValue in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTMapValueInfo"/> class.
            </summary>
            <param name="id">Identifier for the MapValue.</param>
            <param name="definedIn">Identifier of the partition in which this MapValue is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTMapValueInfo"/> class.
            </summary>
            <param name="id">Identifier for the MapValue.</param>
            <param name="definedIn">Identifier of the partition in which this MapValue is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than MapValue if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTMapValueInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.op_Equality(Azure.DigitalTwins.Parser.DTMapValueInfo,Azure.DigitalTwins.Parser.DTMapValueInfo)">
            <summary>
            Determines whether two <c>DTMapValueInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTMapValueInfo</c> object to compare.</param>
            <param name="y">Another <c>DTMapValueInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.op_Inequality(Azure.DigitalTwins.Parser.DTMapValueInfo,Azure.DigitalTwins.Parser.DTMapValueInfo)">
            <summary>
            Determines whether two <c>DTMapValueInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTMapValueInfo</c> object to compare.</param>
            <param name="y">Another <c>DTMapValueInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.Equals(Azure.DigitalTwins.Parser.DTMapValueInfo)">
            <summary>
            Compares to another <c>DTMapValueInfo</c> object.
            </summary>
            <param name="other">The other <c>DTMapValueInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTMapValueInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTMapValueInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTMapValueInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTMapValueInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON MapValue object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTMapValueInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo">
            <summary>
            Class <c>DTPrimitiveSchemaInfo</c> corresponds to an element of type PrimitiveSchema in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo"/> class.
            </summary>
            <param name="id">Identifier for the PrimitiveSchema.</param>
            <param name="definedIn">Identifier of the partition in which this PrimitiveSchema is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than PrimitiveSchema if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.op_Equality(Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo,Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo)">
            <summary>
            Determines whether two <c>DTPrimitiveSchemaInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTPrimitiveSchemaInfo</c> object to compare.</param>
            <param name="y">Another <c>DTPrimitiveSchemaInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.op_Inequality(Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo,Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo)">
            <summary>
            Determines whether two <c>DTPrimitiveSchemaInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTPrimitiveSchemaInfo</c> object to compare.</param>
            <param name="y">Another <c>DTPrimitiveSchemaInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.Equals(Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo)">
            <summary>
            Compares to another <c>DTPrimitiveSchemaInfo</c> object.
            </summary>
            <param name="other">The other <c>DTPrimitiveSchemaInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of type <c>DTPrimitiveSchemaInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object of type <c>DTPrimitiveSchemaInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON PrimitiveSchema object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTPrimitiveSchemaInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTLongInfo">
            <summary>
            Class <c>DTLongInfo</c> corresponds to an element of type Long in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTLongInfo"/> class.
            </summary>
            <param name="id">Identifier for the Long.</param>
            <param name="definedIn">Identifier of the partition in which this Long is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTLongInfo"/> class.
            </summary>
            <param name="id">Identifier for the Long.</param>
            <param name="definedIn">Identifier of the partition in which this Long is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Long if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTLongInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.op_Equality(Azure.DigitalTwins.Parser.DTLongInfo,Azure.DigitalTwins.Parser.DTLongInfo)">
            <summary>
            Determines whether two <c>DTLongInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTLongInfo</c> object to compare.</param>
            <param name="y">Another <c>DTLongInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.op_Inequality(Azure.DigitalTwins.Parser.DTLongInfo,Azure.DigitalTwins.Parser.DTLongInfo)">
            <summary>
            Determines whether two <c>DTLongInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTLongInfo</c> object to compare.</param>
            <param name="y">Another <c>DTLongInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.Equals(Azure.DigitalTwins.Parser.DTLongInfo)">
            <summary>
            Compares to another <c>DTLongInfo</c> object.
            </summary>
            <param name="other">The other <c>DTLongInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTLongInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTLongInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTLongInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTLongInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Long object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTLongInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTEntityInfo">
            <summary>
            Class <c>DTEntityInfo</c> corresponds to an element of type Entity in a DTDL model.
            </summary>
            <remarks>
            This is the base class for all classes that correspond to elements in DTDL models.
            </remarks>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTEntityInfo"/> class.
            </summary>
            <param name="id">Identifier for the Entity.</param>
            <param name="definedIn">Identifier of the partition in which this Entity is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Entity if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTEntityInfo.Comment">
            <summary>
            Gets the value of the 'comment' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTEntityInfo.DefinedIn">
            <summary>
            Gets the value of the 'DefinedIn' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTEntityInfo.Description">
            <summary>
            Gets the value of the 'description' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTEntityInfo.DisplayName">
            <summary>
            Gets the value of the 'displayName' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTEntityInfo.EntityKind">
            <summary>
            Gets the value of the 'EntityKind' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTEntityInfo.Id">
            <summary>
            Gets the value of the 'Id' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTEntityInfo.LanguageVersion">
            <summary>
            Gets the value of the 'languageVersion' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTEntityInfo.SourceObject">
            <summary>
            Gets or sets the JObject in the JSON source that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTEntityInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.op_Equality(Azure.DigitalTwins.Parser.DTEntityInfo,Azure.DigitalTwins.Parser.DTEntityInfo)">
            <summary>
            Determines whether two <c>DTEntityInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTEntityInfo</c> object to compare.</param>
            <param name="y">Another <c>DTEntityInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.op_Inequality(Azure.DigitalTwins.Parser.DTEntityInfo,Azure.DigitalTwins.Parser.DTEntityInfo)">
            <summary>
            Determines whether two <c>DTEntityInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTEntityInfo</c> object to compare.</param>
            <param name="y">Another <c>DTEntityInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <summary>
            Compares to another <c>DTEntityInfo</c> object.
            </summary>
            <param name="other">The other <c>DTEntityInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of type <c>DTEntityInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object of type <c>DTEntityInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTEntityInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTEntityInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Entity object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Get the transitive closure of the IDs of all descendant elementSchema or schema properties, and also check the nesting depth.
            </summary>
            <param name="depth">The depth from the root to this element.</param>
            <param name="depthLimit">The allowed limit on the depth.</param>
            <param name="tooDeepElementId">An out parameter for the ID of the first element that exceeds the depth.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>A <c>HashSet</c> of the IDs, or null if the depth exceeds the limit.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Get the transitive closure of the IDs of all descendant extends properties, and also check the nesting depth.
            </summary>
            <param name="depth">The depth from the root to this element.</param>
            <param name="depthLimit">The allowed limit on the depth.</param>
            <param name="tooDeepElementId">An out parameter for the ID of the first element that exceeds the depth.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>A <c>HashSet</c> of the IDs, or null if the depth exceeds the limit.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Check the nesting depth of all descendant elementSchema or schema properties.
            </summary>
            <param name="depth">The depth from the root to this element.</param>
            <param name="depthLimit">The allowed limit on the depth.</param>
            <param name="tooDeepElementId">An out parameter for the ID of the first element that exceeds the depth.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the depth is within the limit.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Check the nesting depth of all descendant extends properties.
            </summary>
            <param name="depth">The depth from the root to this element.</param>
            <param name="depthLimit">The allowed limit on the depth.</param>
            <param name="tooDeepElementId">An out parameter for the ID of the first element that exceeds the depth.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the depth is within the limit.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <summary>
            Get the ID of any Component element of a descendant contents property, if such exists.
            </summary>
            <param name="elementId">An out parmameter providing the element ID.</param>
            <returns>True if the type is found among the relevant descendant properties.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <summary>
            Get the ID of any Array element of a descendant schema property, if such exists.
            </summary>
            <param name="elementId">An out parmameter providing the element ID.</param>
            <returns>True if the type is found among the relevant descendant properties.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Check that the datatype of every descendant enumValue property matches <paramref name="datatype"/>.
            </summary>
            <param name="ancestorId">The identifier of the ancestor element that specifies the required datatype.</param>
            <param name="datatype">The required datatype.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Apply any transformations that can only be performed after object properties have been assigned.
            </summary>
            <param name="model">The model to transform.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Check whether the element obeys restrictions that can only be assessed after object properties have been assigned.
            </summary>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTEntityInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTCommandInfo">
            <summary>
            Class <c>DTCommandInfo</c> corresponds to an element of type Command in a DTDL model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTCommandInfo"/> class.
            </summary>
            <param name="id">Identifier for the Command.</param>
            <param name="definedIn">Identifier of the partition in which this Command is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.#ctor(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.DTEntityKind)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.DigitalTwins.Parser.DTCommandInfo"/> class.
            </summary>
            <param name="id">Identifier for the Command.</param>
            <param name="definedIn">Identifier of the partition in which this Command is defined.</param>
            <param name="entityKind">The kind of Entity, which may be other than Command if this constructor is called from a derived class.</param>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTCommandInfo.CommandType">
            <summary>
            Gets the value of the 'commandType' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTCommandInfo.Request">
            <summary>
            Gets the value of the 'request' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTCommandInfo.Response">
            <summary>
            Gets the value of the 'response' property of the DTDL element that corresponds to this object.
            </summary>
        </member>
        <member name="P:Azure.DigitalTwins.Parser.DTCommandInfo.IsPartition">
            <summary>
            Gets a value indicating whether this class is a partition point for the object model.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.op_Equality(Azure.DigitalTwins.Parser.DTCommandInfo,Azure.DigitalTwins.Parser.DTCommandInfo)">
            <summary>
            Determines whether two <c>DTCommandInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTCommandInfo</c> object to compare.</param>
            <param name="y">Another <c>DTCommandInfo</c> object to comare to the first.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.op_Inequality(Azure.DigitalTwins.Parser.DTCommandInfo,Azure.DigitalTwins.Parser.DTCommandInfo)">
            <summary>
            Determines whether two <c>DTCommandInfo</c> objects are equal.
            </summary>
            <param name="x">One <c>DTCommandInfo</c> object to compare.</param>
            <param name="y">Another <c>DTCommandInfo</c> object to comare to the first.</param>
            <returns>True if not equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.Equals(Azure.DigitalTwins.Parser.DTCommandInfo)">
            <summary>
            Compares to another <c>DTCommandInfo</c> object.
            </summary>
            <param name="other">The other <c>DTCommandInfo</c> object to comare to.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.Equals(Azure.DigitalTwins.Parser.DTEntityInfo)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.Azure#DigitalTwins#Parser#ITypeChecker#DoesHaveType(Azure.DigitalTwins.Parser.Dtmi)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.ParseTokenV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JToken,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse elements encoded in a JToken into objects of subclasses of type <c>DTCommandInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of <see cref="T:Azure.DigitalTwins.Parser.ValueConstraint"/> to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="token">The JToken to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
            <returns>The count of elements.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.ParseObjectV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ValueConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parse an element encoded in a JObject into an object that is a subclass of type <c>DTCommandInfo</c>.
            </summary>
            <param name="model">The model to add the element to.</param>
            <param name="objectPropertyInfoList">A list of <c>ParsedObjectPropertyInfo</c> to add any object properties, which will be assigned after all parsing has completed.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="valueConstraints">List of required types to be added to <paramref name="elementPropertyConstraints"/>.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">The JObject to parse.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="dtmiSeg">A DTMI segment identifier, used for auto ID generation.</param>
            <param name="keyProp">A property used for the key if the parent exposes a collection of these elements as a dictionary.</param>
            <param name="idRequired">A boolean value indicating whether an @id must be present.</param>
            <param name="typeRequired">A boolean value indicating whether a @type must be present.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.ParseTypeArrayV2(Newtonsoft.Json.Linq.JArray,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse an arry of @type values containing material or supplemental types.
            </summary>
            <param name="typeArray">The array of values to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>The <see cref="T:Azure.DigitalTwins.Parser.DTCommandInfo"/> created.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.TryParseTypeStringV2(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi,System.String,System.Collections.Generic.List{Azure.DigitalTwins.Parser.DTEntityKind},System.Collections.Generic.List{Azure.DigitalTwins.Parser.Dtmi},Azure.DigitalTwins.Parser.DTCommandInfo@,Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <summary>
            Parse a string @type value, whether material or supplemental.
            </summary>
            <param name="typeString">The string value to parse.</param>
            <param name="elementId">The identifier of the element of this type to create.</param>
            <param name="parentId">The identifier of the parent of the element.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <param name="propName">The name of the property by which the parent refers to this element, used for auto ID generation.</param>
            <param name="materialKinds">A list of material kinds to update with the material kind of the type, if any.</param>
            <param name="supplementalTypeIds">A list of supplemental type IDs to update with the supplemental type, if any.</param>
            <param name="elementInfo">The element created if the type is material.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <returns>True if the parse was sucessful.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.ParsePropertiesV2(Azure.DigitalTwins.Parser.Model,System.Collections.Generic.List{Azure.DigitalTwins.Parser.ParsedObjectPropertyInfo},System.Collections.Generic.List{Azure.DigitalTwins.Parser.ElementPropertyConstraint},Azure.DigitalTwins.Parser.PartnerContextFlags,Azure.DigitalTwins.Parser.ParsingErrorCollection,Newtonsoft.Json.Linq.JObject,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Parse the properties in a JSON Command object.
            </summary>
            <param name="model">Model to which to add object properties.</param>
            <param name="objectPropertyInfoList">List of object info structs for deferred assignments.</param>
            <param name="elementPropertyConstraints">List of <c>ElementPropertyConstraint</c> to be checked after object property assignment.</param>
            <param name="partnerContextFlags">Flags indicating any partner contexts that are active.</param>
            <param name="parsingErrorCollection">A <c>ParsingErrorCollection</c> to which any parsing errors are added.</param>
            <param name="obj">JObject to parse.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.GetTransitiveElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.GetTransitiveExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.CheckDepthOfElementSchemaOrSchema(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.CheckDepthOfExtendsNarrow(System.Int32,System.Int32,Azure.DigitalTwins.Parser.Dtmi@,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.TryGetDescendantContentsComponent(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.TryGetDescendantSchemaArray(Azure.DigitalTwins.Parser.Dtmi@)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.CheckDescendantEnumValueDatatype(Azure.DigitalTwins.Parser.Dtmi,System.Type,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.ApplyTransformationsV2(Azure.DigitalTwins.Parser.Model,Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.CheckRestrictionsV2(Azure.DigitalTwins.Parser.ParsingErrorCollection)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.AddType(Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.IPropertySetter)">
            <summary>
            Add a supplemental type.
            </summary>
            <param name="id">Identifier for the supplemental type to add.</param>
            <param name="propertySetter"><c>IPropertySetter</c> for the supplemental type.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.SetPartitionInfo(Azure.DigitalTwins.Parser.ModelPackager,Newtonsoft.Json.Linq.JToken)">
            <summary>
            Set partition information.
            </summary>
            <param name="modelPackager"><c>ModelPackager</c> for packaging the partition as an object model.</param>
            <param name="partitionJToken"><c>JToken</c> containing the partition JSON.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.GetAsJObject(System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Gets a <c>JObject</c> that serializes the instance of this class.
            </summary>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
            <param name="extensionTypes">A <c>HashSet</c> of identifiers of additional supplemental types that may be added to.</param>
            <returns>The seriazized instance.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.DoesPropertyDictContainKey(System.String,System.String)">
            <summary>
            Indicate whether the property with a given <paramref name="propertyName"/> is a dictionary that holds a given <paramref name="key"/>.
            </summary>
            <param name="propertyName">The name of the property to check.</param>
            <param name="key">The key for the dictionary property.</param>
            <returns>True if the property is present, is a dictionary, and holds the given key.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.TrySetObjectProperty(System.String,System.Object,System.String)">
            <summary>
            Try to set an object property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="key">The key for dictionary properties.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.TrySetLiteralProperty(System.String,System.String,System.String,System.String)">
            <summary>
            Try to set a literal property with a given <paramref name="propertyName"/>.
            </summary>
            <param name="propertyName">The name of the property whose value to set if the property is recognized.</param>
            <param name="value">The value to set.</param>
            <param name="language">The language for language-tagged string properties.</param>
            <param name="typeFragment">The fragment portion of the XSD URI indicating the type of literal.</param>
            <returns>True if the property name is recognized.</returns>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.AddObjectPropertiesToJArray(Newtonsoft.Json.Linq.JArray@,System.Collections.Generic.HashSet{Azure.DigitalTwins.Parser.Dtmi}@)">
            <summary>
            Add object properties to a <c>JArray</c>.
            </summary>
            <param name="objectPropertiesArray">The <c>JArray</c> to add the properties to.</param>
            <param name="objectReferences">A <c>HashSet</c> of object identifiers to which any object references are added.</param>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.DTCommandInfo.AddLiteralPropertiesToJArray(Newtonsoft.Json.Linq.JArray@)">
            <summary>
            Add literal properties to a <c>JArray</c>.
            </summary>
            <param name="literalPropertiesArray">The <c>JArray</c> to add the properties to.</param>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTEntityKind">
            <summary>
            Indicates the kind of Entity.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Array">
            <summary>The kind of the Entity is Array.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Boolean">
            <summary>The kind of the Entity is Boolean.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Command">
            <summary>The kind of the Entity is Command.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.CommandPayload">
            <summary>The kind of the Entity is CommandPayload.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.CommandType">
            <summary>The kind of the Entity is CommandType.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Component">
            <summary>The kind of the Entity is Component.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Date">
            <summary>The kind of the Entity is Date.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.DateTime">
            <summary>The kind of the Entity is DateTime.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Double">
            <summary>The kind of the Entity is Double.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Duration">
            <summary>The kind of the Entity is Duration.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Enum">
            <summary>The kind of the Entity is Enum.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.EnumValue">
            <summary>The kind of the Entity is EnumValue.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Field">
            <summary>The kind of the Entity is Field.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Float">
            <summary>The kind of the Entity is Float.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Integer">
            <summary>The kind of the Entity is Integer.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Interface">
            <summary>The kind of the Entity is Interface.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Long">
            <summary>The kind of the Entity is Long.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Map">
            <summary>The kind of the Entity is Map.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.MapKey">
            <summary>The kind of the Entity is MapKey.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.MapValue">
            <summary>The kind of the Entity is MapValue.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Object">
            <summary>The kind of the Entity is Object.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Property">
            <summary>The kind of the Entity is Property.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Reference">
            <summary>The kind of the Entity is Reference.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Relationship">
            <summary>The kind of the Entity is Relationship.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.String">
            <summary>The kind of the Entity is String.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Telemetry">
            <summary>The kind of the Entity is Telemetry.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Time">
            <summary>The kind of the Entity is Time.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.Unit">
            <summary>The kind of the Entity is Unit.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTEntityKind.UnitAttribute">
            <summary>The kind of the Entity is UnitAttribute.</summary>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.ObverseObjectFactory">
            <summary>
            Class for creating instances of obverse classes.
            </summary>
        </member>
        <member name="M:Azure.DigitalTwins.Parser.ObverseObjectFactory.Create(System.String,Azure.DigitalTwins.Parser.Dtmi,Azure.DigitalTwins.Parser.Dtmi)">
            <summary>
            Class for creating instances of obverse classes.
            </summary>
            <param name="obverseName">The name of the obverse class to instantiate.</param>
            <param name="id">The ID of the element to create an object for.</param>
            <param name="definedIn">Identifier of the partition in which this element is defined.</param>
            <returns>A new obverse object.</returns>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.MaterialTypeNameCollection">
            <summary>
            A collection of all material type names.
            </summary>
        </member>
        <member name="T:Azure.DigitalTwins.Parser.DTExtensionKind">
            <summary>
            Indicates the kind of Extension.
            </summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTExtensionKind.None">
            <summary>The kind of the Extension is None.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTExtensionKind.SemanticType">
            <summary>The kind of the Extension is SemanticType.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTExtensionKind.Unit">
            <summary>The kind of the Extension is Unit.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTExtensionKind.SemanticUnit">
            <summary>The kind of the Extension is SemanticUnit.</summary>
        </member>
        <member name="F:Azure.DigitalTwins.Parser.DTExtensionKind.UnitAttribute">
            <summary>The kind of the Extension is UnitAttribute.</summary>
        </member>
    </members>
</doc>
